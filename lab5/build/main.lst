ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.init_leds,"ax",%progbits
  19              		.align	1
  20              		.global	init_leds
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	init_leds:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   *
   4:Src/main.c    ****   ******************************************************************************
   5:Src/main.c    ****   * File Name          : main.c
   6:Src/main.c    ****   * Description        : Main program body
   7:Src/main.c    ****   ******************************************************************************
   8:Src/main.c    ****   ** This notice applies to any and all portions of this file
   9:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  11:Src/main.c    ****   * inserted by the user or by software development tools
  12:Src/main.c    ****   * are owned by their respective copyright owners.
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/main.c    ****   * are permitted provided that the following conditions are met:
  18:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  20:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *      and/or other materials provided with the distribution.
  23:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  25:Src/main.c    ****   *      without specific prior written permission.
  26:Src/main.c    ****   *
  27:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 2


  33:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/main.c    ****   *
  38:Src/main.c    ****   ******************************************************************************
  39:Src/main.c    ****   */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "stm32f0xx_hal.h"
  44:Src/main.c    **** void _Error_Handler(char * file, int line);
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** //Initialize all four LEDs
  70:Src/main.c    **** void init_leds(void)
  71:Src/main.c    **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  72:Src/main.c    ****   //Initialize red LED, PC6
  73:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER6_0; //General purpose output
  32              		.loc 1 73 3 view .LVU1
  33              		.loc 1 73 8 is_stmt 0 view .LVU2
  34 0000 2C4B     		ldr	r3, .L2
  35 0002 1968     		ldr	r1, [r3]
  36              		.loc 1 73 16 view .LVU3
  37 0004 8022     		movs	r2, #128
  38 0006 5201     		lsls	r2, r2, #5
  39 0008 0A43     		orrs	r2, r1
  40 000a 1A60     		str	r2, [r3]
  74:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_6; // Push-pull
  41              		.loc 1 74 3 is_stmt 1 view .LVU4
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 3


  42              		.loc 1 74 8 is_stmt 0 view .LVU5
  43 000c 5A68     		ldr	r2, [r3, #4]
  44              		.loc 1 74 17 view .LVU6
  45 000e 4021     		movs	r1, #64
  46 0010 8A43     		bics	r2, r1
  47 0012 5A60     		str	r2, [r3, #4]
  75:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR6_0; //Low speed
  48              		.loc 1 75 3 is_stmt 1 view .LVU7
  49              		.loc 1 75 8 is_stmt 0 view .LVU8
  50 0014 9A68     		ldr	r2, [r3, #8]
  51              		.loc 1 75 18 view .LVU9
  52 0016 2849     		ldr	r1, .L2+4
  53 0018 0A40     		ands	r2, r1
  54 001a 9A60     		str	r2, [r3, #8]
  76:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR6_0 | GPIO_PUPDR_PUPDR6_1); //No pull up or down
  55              		.loc 1 76 3 is_stmt 1 view .LVU10
  56              		.loc 1 76 8 is_stmt 0 view .LVU11
  57 001c DA68     		ldr	r2, [r3, #12]
  58              		.loc 1 76 16 view .LVU12
  59 001e 2749     		ldr	r1, .L2+8
  60 0020 0A40     		ands	r2, r1
  61 0022 DA60     		str	r2, [r3, #12]
  77:Src/main.c    **** 
  78:Src/main.c    ****   //Initialize blue LED, PC7
  79:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER7_0; //General purpose output
  62              		.loc 1 79 3 is_stmt 1 view .LVU13
  63              		.loc 1 79 8 is_stmt 0 view .LVU14
  64 0024 1968     		ldr	r1, [r3]
  65              		.loc 1 79 16 view .LVU15
  66 0026 8022     		movs	r2, #128
  67 0028 D201     		lsls	r2, r2, #7
  68 002a 0A43     		orrs	r2, r1
  69 002c 1A60     		str	r2, [r3]
  80:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_7; // Push-pull
  70              		.loc 1 80 3 is_stmt 1 view .LVU16
  71              		.loc 1 80 8 is_stmt 0 view .LVU17
  72 002e 5A68     		ldr	r2, [r3, #4]
  73              		.loc 1 80 17 view .LVU18
  74 0030 8021     		movs	r1, #128
  75 0032 8A43     		bics	r2, r1
  76 0034 5A60     		str	r2, [r3, #4]
  81:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR7_0; //Low speed
  77              		.loc 1 81 3 is_stmt 1 view .LVU19
  78              		.loc 1 81 8 is_stmt 0 view .LVU20
  79 0036 9A68     		ldr	r2, [r3, #8]
  80              		.loc 1 81 18 view .LVU21
  81 0038 2149     		ldr	r1, .L2+12
  82 003a 0A40     		ands	r2, r1
  83 003c 9A60     		str	r2, [r3, #8]
  82:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR7_0 | GPIO_PUPDR_PUPDR7_1); //No pull up or down
  84              		.loc 1 82 3 is_stmt 1 view .LVU22
  85              		.loc 1 82 8 is_stmt 0 view .LVU23
  86 003e DA68     		ldr	r2, [r3, #12]
  87              		.loc 1 82 16 view .LVU24
  88 0040 2049     		ldr	r1, .L2+16
  89 0042 0A40     		ands	r2, r1
  90 0044 DA60     		str	r2, [r3, #12]
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 4


  83:Src/main.c    **** 
  84:Src/main.c    ****   //Initialize orange LED, PC8
  85:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER8_0; //General purpose output
  91              		.loc 1 85 3 is_stmt 1 view .LVU25
  92              		.loc 1 85 8 is_stmt 0 view .LVU26
  93 0046 1968     		ldr	r1, [r3]
  94              		.loc 1 85 16 view .LVU27
  95 0048 8022     		movs	r2, #128
  96 004a 5202     		lsls	r2, r2, #9
  97 004c 0A43     		orrs	r2, r1
  98 004e 1A60     		str	r2, [r3]
  86:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_8; // Push-pull
  99              		.loc 1 86 3 is_stmt 1 view .LVU28
 100              		.loc 1 86 8 is_stmt 0 view .LVU29
 101 0050 5A68     		ldr	r2, [r3, #4]
 102              		.loc 1 86 17 view .LVU30
 103 0052 1D49     		ldr	r1, .L2+20
 104 0054 0A40     		ands	r2, r1
 105 0056 5A60     		str	r2, [r3, #4]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR8_0; //Low speed
 106              		.loc 1 87 3 is_stmt 1 view .LVU31
 107              		.loc 1 87 8 is_stmt 0 view .LVU32
 108 0058 9A68     		ldr	r2, [r3, #8]
 109              		.loc 1 87 18 view .LVU33
 110 005a 1C49     		ldr	r1, .L2+24
 111 005c 0A40     		ands	r2, r1
 112 005e 9A60     		str	r2, [r3, #8]
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR8_0 | GPIO_PUPDR_PUPDR8_1); //No pull up or down
 113              		.loc 1 88 3 is_stmt 1 view .LVU34
 114              		.loc 1 88 8 is_stmt 0 view .LVU35
 115 0060 DA68     		ldr	r2, [r3, #12]
 116              		.loc 1 88 16 view .LVU36
 117 0062 1B49     		ldr	r1, .L2+28
 118 0064 0A40     		ands	r2, r1
 119 0066 DA60     		str	r2, [r3, #12]
  89:Src/main.c    **** 
  90:Src/main.c    ****   //Initialize green LED, PC9
  91:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER9_0; //General purpose output
 120              		.loc 1 91 3 is_stmt 1 view .LVU37
 121              		.loc 1 91 8 is_stmt 0 view .LVU38
 122 0068 1968     		ldr	r1, [r3]
 123              		.loc 1 91 16 view .LVU39
 124 006a 8022     		movs	r2, #128
 125 006c D202     		lsls	r2, r2, #11
 126 006e 0A43     		orrs	r2, r1
 127 0070 1A60     		str	r2, [r3]
  92:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_9; // Push-pull
 128              		.loc 1 92 3 is_stmt 1 view .LVU40
 129              		.loc 1 92 8 is_stmt 0 view .LVU41
 130 0072 5A68     		ldr	r2, [r3, #4]
 131              		.loc 1 92 17 view .LVU42
 132 0074 1749     		ldr	r1, .L2+32
 133 0076 0A40     		ands	r2, r1
 134 0078 5A60     		str	r2, [r3, #4]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR9_0; //Low speed
 135              		.loc 1 93 3 is_stmt 1 view .LVU43
 136              		.loc 1 93 8 is_stmt 0 view .LVU44
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 5


 137 007a 9A68     		ldr	r2, [r3, #8]
 138              		.loc 1 93 18 view .LVU45
 139 007c 1649     		ldr	r1, .L2+36
 140 007e 0A40     		ands	r2, r1
 141 0080 9A60     		str	r2, [r3, #8]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR9_0 | GPIO_PUPDR_PUPDR9_1); //No pull up or down
 142              		.loc 1 94 3 is_stmt 1 view .LVU46
 143              		.loc 1 94 8 is_stmt 0 view .LVU47
 144 0082 DA68     		ldr	r2, [r3, #12]
 145              		.loc 1 94 16 view .LVU48
 146 0084 1549     		ldr	r1, .L2+40
 147 0086 0A40     		ands	r2, r1
 148 0088 DA60     		str	r2, [r3, #12]
  95:Src/main.c    **** 
  96:Src/main.c    ****   //Set all LEDs off
  97:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_6;
 149              		.loc 1 97 3 is_stmt 1 view .LVU49
 150              		.loc 1 97 8 is_stmt 0 view .LVU50
 151 008a 9969     		ldr	r1, [r3, #24]
 152              		.loc 1 97 15 view .LVU51
 153 008c 8022     		movs	r2, #128
 154 008e D203     		lsls	r2, r2, #15
 155 0090 0A43     		orrs	r2, r1
 156 0092 9A61     		str	r2, [r3, #24]
  98:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_7;
 157              		.loc 1 98 3 is_stmt 1 view .LVU52
 158              		.loc 1 98 8 is_stmt 0 view .LVU53
 159 0094 9969     		ldr	r1, [r3, #24]
 160              		.loc 1 98 15 view .LVU54
 161 0096 8022     		movs	r2, #128
 162 0098 1204     		lsls	r2, r2, #16
 163 009a 0A43     		orrs	r2, r1
 164 009c 9A61     		str	r2, [r3, #24]
  99:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_8;
 165              		.loc 1 99 3 is_stmt 1 view .LVU55
 166              		.loc 1 99 8 is_stmt 0 view .LVU56
 167 009e 9969     		ldr	r1, [r3, #24]
 168              		.loc 1 99 15 view .LVU57
 169 00a0 8022     		movs	r2, #128
 170 00a2 5204     		lsls	r2, r2, #17
 171 00a4 0A43     		orrs	r2, r1
 172 00a6 9A61     		str	r2, [r3, #24]
 100:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_9;
 173              		.loc 1 100 3 is_stmt 1 view .LVU58
 174              		.loc 1 100 8 is_stmt 0 view .LVU59
 175 00a8 9969     		ldr	r1, [r3, #24]
 176              		.loc 1 100 15 view .LVU60
 177 00aa 8022     		movs	r2, #128
 178 00ac 9204     		lsls	r2, r2, #18
 179 00ae 0A43     		orrs	r2, r1
 180 00b0 9A61     		str	r2, [r3, #24]
 101:Src/main.c    **** }
 181              		.loc 1 101 1 view .LVU61
 182              		@ sp needed
 183 00b2 7047     		bx	lr
 184              	.L3:
 185              		.align	2
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 6


 186              	.L2:
 187 00b4 00080048 		.word	1207961600
 188 00b8 FFEFFFFF 		.word	-4097
 189 00bc FFCFFFFF 		.word	-12289
 190 00c0 FFBFFFFF 		.word	-16385
 191 00c4 FF3FFFFF 		.word	-49153
 192 00c8 FFFEFFFF 		.word	-257
 193 00cc FFFFFEFF 		.word	-65537
 194 00d0 FFFFFCFF 		.word	-196609
 195 00d4 FFFDFFFF 		.word	-513
 196 00d8 FFFFFBFF 		.word	-262145
 197 00dc FFFFF3FF 		.word	-786433
 198              		.cfi_endproc
 199              	.LFE40:
 201              		.section	.text._Error_Handler,"ax",%progbits
 202              		.align	1
 203              		.global	_Error_Handler
 204              		.syntax unified
 205              		.code	16
 206              		.thumb_func
 208              	_Error_Handler:
 209              	.LFB43:
 102:Src/main.c    **** 
 103:Src/main.c    **** int main(void)
 104:Src/main.c    **** {
 105:Src/main.c    ****   SystemClock_Config();
 106:Src/main.c    **** 
 107:Src/main.c    ****   //Enable clock on GPIOB and GPIOC
 108:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 109:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 110:Src/main.c    **** 
 111:Src/main.c    ****   init_leds();
 112:Src/main.c    ****   
 113:Src/main.c    ****   //Set PB11 to alternate function, open-drain output, I2C2_SDA
 114:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER11_1;
 115:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 116:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 117:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 118:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER13_1;
 119:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 120:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 121:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 122:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER14_0;
 123:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 124:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 125:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 126:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER0_0;
 127:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 128:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 129:Src/main.c    **** 
 130:Src/main.c    ****   //Enable I2C2 in RCC
 131:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 132:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 133:Src/main.c    ****   //PRESC 1
 134:Src/main.c    ****   //SCLL 0x13
 135:Src/main.c    ****   //SCLH 0xF
 136:Src/main.c    ****   //SDADEL 0x2
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 7


 137:Src/main.c    ****   //SCLDEL 0x4
 138:Src/main.c    ****   I2C2->TIMINGR |= 0x10420F13;
 139:Src/main.c    ****   //Enable I2C using PE bit in CR1
 140:Src/main.c    ****   I2C2->CR1 |= I2C_CR1_PE;
 141:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 142:Src/main.c    ****   I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));
 143:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 144:Src/main.c    ****   //Set number of bytes to transmit = 1
 145:Src/main.c    ****   //set RD_WRN bit to 0 to indicate write
 146:Src/main.c    ****   //set the START bit
 147:Src/main.c    ****   //I2C2->CR2 |= 0x00010069;
 148:Src/main.c    ****   HAL_Delay(1);
 149:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 150:Src/main.c    **** 
 151:Src/main.c    ****   //Wait until either TXIS or NACKF flags are set
 152:Src/main.c    ****   while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_TXIS)) {}
 153:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     //Failed
 156:Src/main.c    ****     GPIOC->ODR |= GPIO_ODR_6; //Turn on red LED
 157:Src/main.c    ****   }
 158:Src/main.c    ****   else
 159:Src/main.c    ****   {
 160:Src/main.c    ****     //success
 161:Src/main.c    ****     GPIOC->ODR |= GPIO_ODR_9; //Turn on green LED
 162:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 163:Src/main.c    ****     I2C2->TXDR = 0x0F;
 164:Src/main.c    ****     //Wait until TC flag set
 165:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_TC)) {}
 166:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 167:Src/main.c    ****     I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));  
 168:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 169:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 170:Src/main.c    ****     //set start bit again to perform restart
 171:Src/main.c    ****     HAL_Delay(1);
 172:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_START;
 173:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 174:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_RXNE)) {}
 175:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 176:Src/main.c    ****     {
 177:Src/main.c    ****       //Failed
 178:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_8; //Turn on orange LED
 179:Src/main.c    ****     }
 180:Src/main.c    ****     else
 181:Src/main.c    ****     {
 182:Src/main.c    ****       //wait until TC
 183:Src/main.c    ****       while (!(I2C2->ISR & I2C_ISR_TC)) {}
 184:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 185:Src/main.c    ****       if (I2C2->RXDR == 0xD3)
 186:Src/main.c    ****       {
 187:Src/main.c    ****         GPIOC->ODR |= GPIO_ODR_7; //Turn on blue LED
 188:Src/main.c    ****       }
 189:Src/main.c    ****       //Set STOP bit in CR2 to release I2C bus
 190:Src/main.c    ****       I2C2->CR2 |= I2C_CR2_STOP;
 191:Src/main.c    ****     }
 192:Src/main.c    ****   }
 193:Src/main.c    ****   
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 8


 194:Src/main.c    ****   while (1)
 195:Src/main.c    ****   {
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /** System Clock Configuration
 201:Src/main.c    **** */
 202:Src/main.c    **** void SystemClock_Config(void)
 203:Src/main.c    **** {
 204:Src/main.c    **** 
 205:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 206:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 207:Src/main.c    **** 
 208:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 209:Src/main.c    ****     */
 210:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 211:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 212:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 214:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 215:Src/main.c    ****   {
 216:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 217:Src/main.c    ****   }
 218:Src/main.c    **** 
 219:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 220:Src/main.c    ****     */
 221:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 222:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 223:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 224:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 225:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 226:Src/main.c    **** 
 227:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    ****     /**Configure the Systick interrupt time
 233:Src/main.c    ****     */
 234:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 235:Src/main.c    **** 
 236:Src/main.c    ****     /**Configure the Systick
 237:Src/main.c    ****     */
 238:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 239:Src/main.c    **** 
 240:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 241:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /* USER CODE BEGIN 4 */
 245:Src/main.c    **** 
 246:Src/main.c    **** /* USER CODE END 4 */
 247:Src/main.c    **** 
 248:Src/main.c    **** /**
 249:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 250:Src/main.c    ****   * @param  None
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 9


 251:Src/main.c    ****   * @retval None
 252:Src/main.c    ****   */
 253:Src/main.c    **** void _Error_Handler(char * file, int line)
 254:Src/main.c    **** {
 210              		.loc 1 254 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ Volatile: function does not return.
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL0:
 217              	.L5:
 255:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 256:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 257:Src/main.c    ****   while(1)
 218              		.loc 1 257 3 view .LVU63
 258:Src/main.c    ****   {
 259:Src/main.c    ****   }
 219              		.loc 1 259 3 view .LVU64
 257:Src/main.c    ****   {
 220              		.loc 1 257 8 view .LVU65
 221 0000 FEE7     		b	.L5
 222              		.cfi_endproc
 223              	.LFE43:
 225              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 226              		.align	2
 227              	.LC0:
 228 0000 5372632F 		.ascii	"Src/main.c\000"
 228      6D61696E 
 228      2E6300
 229              		.global	__aeabi_uidiv
 230              		.section	.text.SystemClock_Config,"ax",%progbits
 231              		.align	1
 232              		.global	SystemClock_Config
 233              		.syntax unified
 234              		.code	16
 235              		.thumb_func
 237              	SystemClock_Config:
 238              	.LFB42:
 203:Src/main.c    **** 
 239              		.loc 1 203 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 72
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 00B5     		push	{lr}
 244              	.LCFI0:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 14, -4
 247 0002 93B0     		sub	sp, sp, #76
 248              	.LCFI1:
 249              		.cfi_def_cfa_offset 80
 205:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 250              		.loc 1 205 3 view .LVU67
 206:Src/main.c    **** 
 251              		.loc 1 206 3 view .LVU68
 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 252              		.loc 1 210 3 view .LVU69
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 10


 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 253              		.loc 1 210 36 is_stmt 0 view .LVU70
 254 0004 0223     		movs	r3, #2
 255 0006 0593     		str	r3, [sp, #20]
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 256              		.loc 1 211 3 is_stmt 1 view .LVU71
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 257              		.loc 1 211 30 is_stmt 0 view .LVU72
 258 0008 013B     		subs	r3, r3, #1
 259 000a 0893     		str	r3, [sp, #32]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 260              		.loc 1 212 3 is_stmt 1 view .LVU73
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 261              		.loc 1 212 41 is_stmt 0 view .LVU74
 262 000c 0F33     		adds	r3, r3, #15
 263 000e 0993     		str	r3, [sp, #36]
 213:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 264              		.loc 1 213 3 is_stmt 1 view .LVU75
 213:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 265              		.loc 1 213 34 is_stmt 0 view .LVU76
 266 0010 0023     		movs	r3, #0
 267 0012 0E93     		str	r3, [sp, #56]
 214:Src/main.c    ****   {
 268              		.loc 1 214 3 is_stmt 1 view .LVU77
 214:Src/main.c    ****   {
 269              		.loc 1 214 7 is_stmt 0 view .LVU78
 270 0014 05A8     		add	r0, sp, #20
 271 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 272              	.LVL1:
 214:Src/main.c    ****   {
 273              		.loc 1 214 6 discriminator 1 view .LVU79
 274 001a 0028     		cmp	r0, #0
 275 001c 1ED1     		bne	.L9
 221:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 276              		.loc 1 221 3 is_stmt 1 view .LVU80
 221:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 277              		.loc 1 221 31 is_stmt 0 view .LVU81
 278 001e 0723     		movs	r3, #7
 279 0020 0193     		str	r3, [sp, #4]
 223:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 280              		.loc 1 223 3 is_stmt 1 view .LVU82
 223:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 281              		.loc 1 223 34 is_stmt 0 view .LVU83
 282 0022 0023     		movs	r3, #0
 283 0024 0293     		str	r3, [sp, #8]
 224:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 284              		.loc 1 224 3 is_stmt 1 view .LVU84
 224:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 285              		.loc 1 224 35 is_stmt 0 view .LVU85
 286 0026 0393     		str	r3, [sp, #12]
 225:Src/main.c    **** 
 287              		.loc 1 225 3 is_stmt 1 view .LVU86
 225:Src/main.c    **** 
 288              		.loc 1 225 36 is_stmt 0 view .LVU87
 289 0028 0493     		str	r3, [sp, #16]
 227:Src/main.c    ****   {
 290              		.loc 1 227 3 is_stmt 1 view .LVU88
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 11


 227:Src/main.c    ****   {
 291              		.loc 1 227 7 is_stmt 0 view .LVU89
 292 002a 0021     		movs	r1, #0
 293 002c 01A8     		add	r0, sp, #4
 294 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 295              	.LVL2:
 227:Src/main.c    ****   {
 296              		.loc 1 227 6 discriminator 1 view .LVU90
 297 0032 0028     		cmp	r0, #0
 298 0034 16D1     		bne	.L10
 234:Src/main.c    **** 
 299              		.loc 1 234 3 is_stmt 1 view .LVU91
 234:Src/main.c    **** 
 300              		.loc 1 234 22 is_stmt 0 view .LVU92
 301 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 302              	.LVL3:
 234:Src/main.c    **** 
 303              		.loc 1 234 3 discriminator 1 view .LVU93
 304 003a FA21     		movs	r1, #250
 305 003c 8900     		lsls	r1, r1, #2
 306 003e FFF7FEFF 		bl	__aeabi_uidiv
 307              	.LVL4:
 308 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 309              	.LVL5:
 238:Src/main.c    **** 
 310              		.loc 1 238 3 is_stmt 1 view .LVU94
 311 0046 0420     		movs	r0, #4
 312 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 313              	.LVL6:
 241:Src/main.c    **** }
 314              		.loc 1 241 3 view .LVU95
 315 004c 0120     		movs	r0, #1
 316 004e 0022     		movs	r2, #0
 317 0050 0021     		movs	r1, #0
 318 0052 4042     		rsbs	r0, r0, #0
 319 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 320              	.LVL7:
 242:Src/main.c    **** 
 321              		.loc 1 242 1 is_stmt 0 view .LVU96
 322 0058 13B0     		add	sp, sp, #76
 323              		@ sp needed
 324 005a 00BD     		pop	{pc}
 325              	.L9:
 216:Src/main.c    ****   }
 326              		.loc 1 216 5 is_stmt 1 view .LVU97
 327 005c 0348     		ldr	r0, .L11
 328 005e D821     		movs	r1, #216
 329 0060 FFF7FEFF 		bl	_Error_Handler
 330              	.LVL8:
 331              	.L10:
 229:Src/main.c    ****   }
 332              		.loc 1 229 5 view .LVU98
 333 0064 0148     		ldr	r0, .L11
 334 0066 E521     		movs	r1, #229
 335 0068 FFF7FEFF 		bl	_Error_Handler
 336              	.LVL9:
 337              	.L12:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 12


 338              		.align	2
 339              	.L11:
 340 006c 00000000 		.word	.LC0
 341              		.cfi_endproc
 342              	.LFE42:
 344              		.section	.text.main,"ax",%progbits
 345              		.align	1
 346              		.global	main
 347              		.syntax unified
 348              		.code	16
 349              		.thumb_func
 351              	main:
 352              	.LFB41:
 104:Src/main.c    ****   SystemClock_Config();
 353              		.loc 1 104 1 view -0
 354              		.cfi_startproc
 355              		@ Volatile: function does not return.
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 70B5     		push	{r4, r5, r6, lr}
 359              	.LCFI2:
 360              		.cfi_def_cfa_offset 16
 361              		.cfi_offset 4, -16
 362              		.cfi_offset 5, -12
 363              		.cfi_offset 6, -8
 364              		.cfi_offset 14, -4
 105:Src/main.c    **** 
 365              		.loc 1 105 3 view .LVU100
 366 0002 FFF7FEFF 		bl	SystemClock_Config
 367              	.LVL10:
 108:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 368              		.loc 1 108 3 view .LVU101
 108:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 369              		.loc 1 108 6 is_stmt 0 view .LVU102
 370 0006 5E4C     		ldr	r4, .L31
 371 0008 6269     		ldr	r2, [r4, #20]
 108:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 372              		.loc 1 108 15 view .LVU103
 373 000a 8023     		movs	r3, #128
 374 000c DB02     		lsls	r3, r3, #11
 375 000e 1343     		orrs	r3, r2
 376 0010 6361     		str	r3, [r4, #20]
 109:Src/main.c    **** 
 377              		.loc 1 109 3 is_stmt 1 view .LVU104
 109:Src/main.c    **** 
 378              		.loc 1 109 6 is_stmt 0 view .LVU105
 379 0012 6269     		ldr	r2, [r4, #20]
 109:Src/main.c    **** 
 380              		.loc 1 109 15 view .LVU106
 381 0014 8023     		movs	r3, #128
 382 0016 1B03     		lsls	r3, r3, #12
 383 0018 1343     		orrs	r3, r2
 384 001a 6361     		str	r3, [r4, #20]
 111:Src/main.c    ****   
 385              		.loc 1 111 3 is_stmt 1 view .LVU107
 386 001c FFF7FEFF 		bl	init_leds
 387              	.LVL11:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 13


 114:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 388              		.loc 1 114 3 view .LVU108
 114:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 389              		.loc 1 114 8 is_stmt 0 view .LVU109
 390 0020 584B     		ldr	r3, .L31+4
 391 0022 1968     		ldr	r1, [r3]
 114:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 392              		.loc 1 114 16 view .LVU110
 393 0024 8022     		movs	r2, #128
 394 0026 1204     		lsls	r2, r2, #16
 395 0028 0A43     		orrs	r2, r1
 396 002a 1A60     		str	r2, [r3]
 115:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 397              		.loc 1 115 3 is_stmt 1 view .LVU111
 115:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 398              		.loc 1 115 8 is_stmt 0 view .LVU112
 399 002c 5968     		ldr	r1, [r3, #4]
 115:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 400              		.loc 1 115 17 view .LVU113
 401 002e 8022     		movs	r2, #128
 402 0030 1201     		lsls	r2, r2, #4
 403 0032 0A43     		orrs	r2, r1
 404 0034 5A60     		str	r2, [r3, #4]
 116:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 405              		.loc 1 116 3 is_stmt 1 view .LVU114
 116:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 406              		.loc 1 116 13 is_stmt 0 view .LVU115
 407 0036 596A     		ldr	r1, [r3, #36]
 116:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 408              		.loc 1 116 17 view .LVU116
 409 0038 8022     		movs	r2, #128
 410 003a 5201     		lsls	r2, r2, #5
 411 003c 0A43     		orrs	r2, r1
 412 003e 5A62     		str	r2, [r3, #36]
 118:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 413              		.loc 1 118 3 is_stmt 1 view .LVU117
 118:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 414              		.loc 1 118 8 is_stmt 0 view .LVU118
 415 0040 1968     		ldr	r1, [r3]
 118:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 416              		.loc 1 118 16 view .LVU119
 417 0042 8022     		movs	r2, #128
 418 0044 1205     		lsls	r2, r2, #20
 419 0046 0A43     		orrs	r2, r1
 420 0048 1A60     		str	r2, [r3]
 119:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 421              		.loc 1 119 3 is_stmt 1 view .LVU120
 119:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 422              		.loc 1 119 8 is_stmt 0 view .LVU121
 423 004a 5A68     		ldr	r2, [r3, #4]
 119:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 424              		.loc 1 119 17 view .LVU122
 425 004c 8025     		movs	r5, #128
 426 004e AD01     		lsls	r5, r5, #6
 427 0050 2A43     		orrs	r2, r5
 428 0052 5A60     		str	r2, [r3, #4]
 120:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 14


 429              		.loc 1 120 3 is_stmt 1 view .LVU123
 120:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 430              		.loc 1 120 13 is_stmt 0 view .LVU124
 431 0054 596A     		ldr	r1, [r3, #36]
 120:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 432              		.loc 1 120 17 view .LVU125
 433 0056 A022     		movs	r2, #160
 434 0058 D203     		lsls	r2, r2, #15
 435 005a 0A43     		orrs	r2, r1
 436 005c 5A62     		str	r2, [r3, #36]
 122:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 437              		.loc 1 122 3 is_stmt 1 view .LVU126
 122:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 438              		.loc 1 122 8 is_stmt 0 view .LVU127
 439 005e 1968     		ldr	r1, [r3]
 122:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 440              		.loc 1 122 16 view .LVU128
 441 0060 8022     		movs	r2, #128
 442 0062 5205     		lsls	r2, r2, #21
 443 0064 0A43     		orrs	r2, r1
 444 0066 1A60     		str	r2, [r3]
 123:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 445              		.loc 1 123 3 is_stmt 1 view .LVU129
 123:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 446              		.loc 1 123 8 is_stmt 0 view .LVU130
 447 0068 5A68     		ldr	r2, [r3, #4]
 123:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 448              		.loc 1 123 17 view .LVU131
 449 006a 4749     		ldr	r1, .L31+8
 450 006c 0A40     		ands	r2, r1
 451 006e 5A60     		str	r2, [r3, #4]
 124:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 452              		.loc 1 124 3 is_stmt 1 view .LVU132
 124:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 453              		.loc 1 124 8 is_stmt 0 view .LVU133
 454 0070 5969     		ldr	r1, [r3, #20]
 124:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 455              		.loc 1 124 14 view .LVU134
 456 0072 8022     		movs	r2, #128
 457 0074 D201     		lsls	r2, r2, #7
 458 0076 0A43     		orrs	r2, r1
 459 0078 5A61     		str	r2, [r3, #20]
 126:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 460              		.loc 1 126 3 is_stmt 1 view .LVU135
 126:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 461              		.loc 1 126 8 is_stmt 0 view .LVU136
 462 007a 444B     		ldr	r3, .L31+12
 463 007c 1968     		ldr	r1, [r3]
 126:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 464              		.loc 1 126 16 view .LVU137
 465 007e 0122     		movs	r2, #1
 466 0080 1143     		orrs	r1, r2
 467 0082 1960     		str	r1, [r3]
 127:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 468              		.loc 1 127 3 is_stmt 1 view .LVU138
 127:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 469              		.loc 1 127 8 is_stmt 0 view .LVU139
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 15


 470 0084 5968     		ldr	r1, [r3, #4]
 127:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 471              		.loc 1 127 17 view .LVU140
 472 0086 9143     		bics	r1, r2
 473 0088 5960     		str	r1, [r3, #4]
 128:Src/main.c    **** 
 474              		.loc 1 128 3 is_stmt 1 view .LVU141
 128:Src/main.c    **** 
 475              		.loc 1 128 8 is_stmt 0 view .LVU142
 476 008a 5969     		ldr	r1, [r3, #20]
 128:Src/main.c    **** 
 477              		.loc 1 128 14 view .LVU143
 478 008c 1143     		orrs	r1, r2
 479 008e 5961     		str	r1, [r3, #20]
 131:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 480              		.loc 1 131 3 is_stmt 1 view .LVU144
 131:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 481              		.loc 1 131 6 is_stmt 0 view .LVU145
 482 0090 E169     		ldr	r1, [r4, #28]
 131:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 483              		.loc 1 131 16 view .LVU146
 484 0092 8023     		movs	r3, #128
 485 0094 DB03     		lsls	r3, r3, #15
 486 0096 0B43     		orrs	r3, r1
 487 0098 E361     		str	r3, [r4, #28]
 138:Src/main.c    ****   //Enable I2C using PE bit in CR1
 488              		.loc 1 138 3 is_stmt 1 view .LVU147
 138:Src/main.c    ****   //Enable I2C using PE bit in CR1
 489              		.loc 1 138 7 is_stmt 0 view .LVU148
 490 009a 3D4C     		ldr	r4, .L31+16
 491 009c 2169     		ldr	r1, [r4, #16]
 138:Src/main.c    ****   //Enable I2C using PE bit in CR1
 492              		.loc 1 138 17 view .LVU149
 493 009e 3D4B     		ldr	r3, .L31+20
 494 00a0 0B43     		orrs	r3, r1
 495 00a2 2361     		str	r3, [r4, #16]
 140:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 496              		.loc 1 140 3 is_stmt 1 view .LVU150
 140:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 497              		.loc 1 140 7 is_stmt 0 view .LVU151
 498 00a4 2368     		ldr	r3, [r4]
 140:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 499              		.loc 1 140 13 view .LVU152
 500 00a6 1343     		orrs	r3, r2
 501 00a8 2360     		str	r3, [r4]
 142:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 502              		.loc 1 142 3 is_stmt 1 view .LVU153
 142:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 503              		.loc 1 142 7 is_stmt 0 view .LVU154
 504 00aa 6368     		ldr	r3, [r4, #4]
 142:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 505              		.loc 1 142 13 view .LVU155
 506 00ac 3A4A     		ldr	r2, .L31+24
 507 00ae 1340     		ands	r3, r2
 508 00b0 6360     		str	r3, [r4, #4]
 143:Src/main.c    ****   //Set number of bytes to transmit = 1
 509              		.loc 1 143 3 is_stmt 1 view .LVU156
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 16


 143:Src/main.c    ****   //Set number of bytes to transmit = 1
 510              		.loc 1 143 7 is_stmt 0 view .LVU157
 511 00b2 6268     		ldr	r2, [r4, #4]
 143:Src/main.c    ****   //Set number of bytes to transmit = 1
 512              		.loc 1 143 13 view .LVU158
 513 00b4 394B     		ldr	r3, .L31+28
 514 00b6 1343     		orrs	r3, r2
 515 00b8 6360     		str	r3, [r4, #4]
 148:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 516              		.loc 1 148 3 is_stmt 1 view .LVU159
 517 00ba 0120     		movs	r0, #1
 518 00bc FFF7FEFF 		bl	HAL_Delay
 519              	.LVL12:
 149:Src/main.c    **** 
 520              		.loc 1 149 3 view .LVU160
 149:Src/main.c    **** 
 521              		.loc 1 149 7 is_stmt 0 view .LVU161
 522 00c0 6368     		ldr	r3, [r4, #4]
 149:Src/main.c    **** 
 523              		.loc 1 149 13 view .LVU162
 524 00c2 1D43     		orrs	r5, r3
 525 00c4 6560     		str	r5, [r4, #4]
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 526              		.loc 1 152 3 is_stmt 1 view .LVU163
 527              	.L15:
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 528              		.loc 1 152 72 discriminator 2 view .LVU164
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 529              		.loc 1 152 39 discriminator 2 view .LVU165
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 530              		.loc 1 152 16 is_stmt 0 discriminator 2 view .LVU166
 531 00c6 324B     		ldr	r3, .L31+16
 532 00c8 9B69     		ldr	r3, [r3, #24]
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 533              		.loc 1 152 39 discriminator 2 view .LVU167
 534 00ca DB06     		lsls	r3, r3, #27
 535 00cc 03D4     		bmi	.L14
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 536              		.loc 1 152 48 discriminator 1 view .LVU168
 537 00ce 304B     		ldr	r3, .L31+16
 538 00d0 9B69     		ldr	r3, [r3, #24]
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 539              		.loc 1 152 39 discriminator 1 view .LVU169
 540 00d2 9B07     		lsls	r3, r3, #30
 541 00d4 F7D5     		bpl	.L15
 542              	.L14:
 153:Src/main.c    ****   {
 543              		.loc 1 153 3 is_stmt 1 view .LVU170
 153:Src/main.c    ****   {
 544              		.loc 1 153 11 is_stmt 0 view .LVU171
 545 00d6 2E4B     		ldr	r3, .L31+16
 546 00d8 9B69     		ldr	r3, [r3, #24]
 153:Src/main.c    ****   {
 547              		.loc 1 153 6 view .LVU172
 548 00da DB06     		lsls	r3, r3, #27
 549 00dc 05D5     		bpl	.L16
 156:Src/main.c    ****   }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 17


 550              		.loc 1 156 5 is_stmt 1 view .LVU173
 156:Src/main.c    ****   }
 551              		.loc 1 156 10 is_stmt 0 view .LVU174
 552 00de 2B4A     		ldr	r2, .L31+12
 553 00e0 5169     		ldr	r1, [r2, #20]
 156:Src/main.c    ****   }
 554              		.loc 1 156 16 view .LVU175
 555 00e2 4023     		movs	r3, #64
 556 00e4 0B43     		orrs	r3, r1
 557 00e6 5361     		str	r3, [r2, #20]
 558              	.L17:
 194:Src/main.c    ****   {
 559              		.loc 1 194 3 is_stmt 1 view .LVU176
 196:Src/main.c    **** 
 560              		.loc 1 196 3 view .LVU177
 194:Src/main.c    ****   {
 561              		.loc 1 194 9 view .LVU178
 562 00e8 FEE7     		b	.L17
 563              	.L16:
 161:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 564              		.loc 1 161 5 view .LVU179
 161:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 565              		.loc 1 161 10 is_stmt 0 view .LVU180
 566 00ea 284A     		ldr	r2, .L31+12
 567 00ec 5169     		ldr	r1, [r2, #20]
 161:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 568              		.loc 1 161 16 view .LVU181
 569 00ee 8023     		movs	r3, #128
 570 00f0 9B00     		lsls	r3, r3, #2
 571 00f2 0B43     		orrs	r3, r1
 572 00f4 5361     		str	r3, [r2, #20]
 163:Src/main.c    ****     //Wait until TC flag set
 573              		.loc 1 163 5 is_stmt 1 view .LVU182
 163:Src/main.c    ****     //Wait until TC flag set
 574              		.loc 1 163 16 is_stmt 0 view .LVU183
 575 00f6 264B     		ldr	r3, .L31+16
 576 00f8 0F22     		movs	r2, #15
 577 00fa 9A62     		str	r2, [r3, #40]
 165:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 578              		.loc 1 165 5 is_stmt 1 view .LVU184
 579              	.L18:
 165:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 580              		.loc 1 165 40 discriminator 1 view .LVU185
 165:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 581              		.loc 1 165 12 discriminator 1 view .LVU186
 165:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 582              		.loc 1 165 18 is_stmt 0 discriminator 1 view .LVU187
 583 00fc 244B     		ldr	r3, .L31+16
 584 00fe 9B69     		ldr	r3, [r3, #24]
 165:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 585              		.loc 1 165 12 discriminator 1 view .LVU188
 586 0100 5B06     		lsls	r3, r3, #25
 587 0102 FBD5     		bpl	.L18
 167:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 588              		.loc 1 167 5 is_stmt 1 view .LVU189
 167:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 589              		.loc 1 167 9 is_stmt 0 view .LVU190
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 18


 590 0104 224C     		ldr	r4, .L31+16
 591 0106 6368     		ldr	r3, [r4, #4]
 167:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 592              		.loc 1 167 15 view .LVU191
 593 0108 234A     		ldr	r2, .L31+24
 594 010a 1340     		ands	r3, r2
 595 010c 6360     		str	r3, [r4, #4]
 168:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 596              		.loc 1 168 5 is_stmt 1 view .LVU192
 168:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 597              		.loc 1 168 9 is_stmt 0 view .LVU193
 598 010e 6268     		ldr	r2, [r4, #4]
 168:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 599              		.loc 1 168 15 view .LVU194
 600 0110 224B     		ldr	r3, .L31+28
 601 0112 1343     		orrs	r3, r2
 602 0114 6360     		str	r3, [r4, #4]
 169:Src/main.c    ****     //set start bit again to perform restart
 603              		.loc 1 169 5 is_stmt 1 view .LVU195
 169:Src/main.c    ****     //set start bit again to perform restart
 604              		.loc 1 169 9 is_stmt 0 view .LVU196
 605 0116 6268     		ldr	r2, [r4, #4]
 169:Src/main.c    ****     //set start bit again to perform restart
 606              		.loc 1 169 15 view .LVU197
 607 0118 8023     		movs	r3, #128
 608 011a DB00     		lsls	r3, r3, #3
 609 011c 1343     		orrs	r3, r2
 610 011e 6360     		str	r3, [r4, #4]
 171:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_START;
 611              		.loc 1 171 5 is_stmt 1 view .LVU198
 612 0120 0120     		movs	r0, #1
 613 0122 FFF7FEFF 		bl	HAL_Delay
 614              	.LVL13:
 172:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 615              		.loc 1 172 5 view .LVU199
 172:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 616              		.loc 1 172 9 is_stmt 0 view .LVU200
 617 0126 6268     		ldr	r2, [r4, #4]
 172:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 618              		.loc 1 172 15 view .LVU201
 619 0128 8023     		movs	r3, #128
 620 012a 9B01     		lsls	r3, r3, #6
 621 012c 1343     		orrs	r3, r2
 622 012e 6360     		str	r3, [r4, #4]
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 623              		.loc 1 174 5 is_stmt 1 view .LVU202
 624              	.L20:
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 625              		.loc 1 174 74 discriminator 2 view .LVU203
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 626              		.loc 1 174 41 discriminator 2 view .LVU204
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 627              		.loc 1 174 18 is_stmt 0 discriminator 2 view .LVU205
 628 0130 174B     		ldr	r3, .L31+16
 629 0132 9B69     		ldr	r3, [r3, #24]
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 630              		.loc 1 174 41 discriminator 2 view .LVU206
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 19


 631 0134 DB06     		lsls	r3, r3, #27
 632 0136 03D4     		bmi	.L19
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 633              		.loc 1 174 50 discriminator 1 view .LVU207
 634 0138 154B     		ldr	r3, .L31+16
 635 013a 9B69     		ldr	r3, [r3, #24]
 174:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 636              		.loc 1 174 41 discriminator 1 view .LVU208
 637 013c 5B07     		lsls	r3, r3, #29
 638 013e F7D5     		bpl	.L20
 639              	.L19:
 175:Src/main.c    ****     {
 640              		.loc 1 175 5 is_stmt 1 view .LVU209
 175:Src/main.c    ****     {
 641              		.loc 1 175 13 is_stmt 0 view .LVU210
 642 0140 134B     		ldr	r3, .L31+16
 643 0142 9B69     		ldr	r3, [r3, #24]
 175:Src/main.c    ****     {
 644              		.loc 1 175 8 view .LVU211
 645 0144 DB06     		lsls	r3, r3, #27
 646 0146 06D5     		bpl	.L21
 178:Src/main.c    ****     }
 647              		.loc 1 178 7 is_stmt 1 view .LVU212
 178:Src/main.c    ****     }
 648              		.loc 1 178 12 is_stmt 0 view .LVU213
 649 0148 104A     		ldr	r2, .L31+12
 650 014a 5169     		ldr	r1, [r2, #20]
 178:Src/main.c    ****     }
 651              		.loc 1 178 18 view .LVU214
 652 014c 8023     		movs	r3, #128
 653 014e 5B00     		lsls	r3, r3, #1
 654 0150 0B43     		orrs	r3, r1
 655 0152 5361     		str	r3, [r2, #20]
 656 0154 C8E7     		b	.L17
 657              	.L21:
 183:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 658              		.loc 1 183 42 is_stmt 1 discriminator 1 view .LVU215
 183:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 659              		.loc 1 183 14 discriminator 1 view .LVU216
 183:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 660              		.loc 1 183 20 is_stmt 0 discriminator 1 view .LVU217
 661 0156 0E4B     		ldr	r3, .L31+16
 662 0158 9B69     		ldr	r3, [r3, #24]
 183:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 663              		.loc 1 183 14 discriminator 1 view .LVU218
 664 015a 5B06     		lsls	r3, r3, #25
 665 015c FBD5     		bpl	.L21
 185:Src/main.c    ****       {
 666              		.loc 1 185 7 is_stmt 1 view .LVU219
 185:Src/main.c    ****       {
 667              		.loc 1 185 15 is_stmt 0 view .LVU220
 668 015e 0C4B     		ldr	r3, .L31+16
 669 0160 5B6A     		ldr	r3, [r3, #36]
 185:Src/main.c    ****       {
 670              		.loc 1 185 10 view .LVU221
 671 0162 D32B     		cmp	r3, #211
 672 0164 06D0     		beq	.L30
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 20


 673              	.L22:
 190:Src/main.c    ****     }
 674              		.loc 1 190 7 is_stmt 1 view .LVU222
 190:Src/main.c    ****     }
 675              		.loc 1 190 11 is_stmt 0 view .LVU223
 676 0166 0A4A     		ldr	r2, .L31+16
 677 0168 5168     		ldr	r1, [r2, #4]
 190:Src/main.c    ****     }
 678              		.loc 1 190 17 view .LVU224
 679 016a 8023     		movs	r3, #128
 680 016c DB01     		lsls	r3, r3, #7
 681 016e 0B43     		orrs	r3, r1
 682 0170 5360     		str	r3, [r2, #4]
 683 0172 B9E7     		b	.L17
 684              	.L30:
 187:Src/main.c    ****       }
 685              		.loc 1 187 9 is_stmt 1 view .LVU225
 187:Src/main.c    ****       }
 686              		.loc 1 187 14 is_stmt 0 view .LVU226
 687 0174 054A     		ldr	r2, .L31+12
 688 0176 5169     		ldr	r1, [r2, #20]
 187:Src/main.c    ****       }
 689              		.loc 1 187 20 view .LVU227
 690 0178 533B     		subs	r3, r3, #83
 691 017a 0B43     		orrs	r3, r1
 692 017c 5361     		str	r3, [r2, #20]
 693 017e F2E7     		b	.L22
 694              	.L32:
 695              		.align	2
 696              	.L31:
 697 0180 00100240 		.word	1073876992
 698 0184 00040048 		.word	1207960576
 699 0188 FFBFFFFF 		.word	-16385
 700 018c 00080048 		.word	1207961600
 701 0190 00580040 		.word	1073764352
 702 0194 130F4210 		.word	272764691
 703 0198 00FC80FF 		.word	-8324096
 704 019c D2000100 		.word	65746
 705              		.cfi_endproc
 706              	.LFE41:
 708              		.text
 709              	.Letext0:
 710              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 711              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 712              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 713              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 714              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 715              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 716              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:19     .text.init_leds:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:25     .text.init_leds:00000000 init_leds
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:187    .text.init_leds:000000b4 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:202    .text._Error_Handler:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:208    .text._Error_Handler:00000000 _Error_Handler
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:226    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:231    .text.SystemClock_Config:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:237    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:340    .text.SystemClock_Config:0000006c $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:345    .text.main:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:351    .text.main:00000000 main
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccFdGQuY.s:697    .text.main:00000180 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Delay
