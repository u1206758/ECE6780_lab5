ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.init_leds,"ax",%progbits
  19              		.align	1
  20              		.global	init_leds
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	init_leds:
  26              	.LFB40:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   *
   4:Src/main.c    ****   ******************************************************************************
   5:Src/main.c    ****   * File Name          : main.c
   6:Src/main.c    ****   * Description        : Main program body
   7:Src/main.c    ****   ******************************************************************************
   8:Src/main.c    ****   ** This notice applies to any and all portions of this file
   9:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  11:Src/main.c    ****   * inserted by the user or by software development tools
  12:Src/main.c    ****   * are owned by their respective copyright owners.
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  17:Src/main.c    ****   * are permitted provided that the following conditions are met:
  18:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  20:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *      and/or other materials provided with the distribution.
  23:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  25:Src/main.c    ****   *      without specific prior written permission.
  26:Src/main.c    ****   *
  27:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  32:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 2


  33:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:Src/main.c    ****   *
  38:Src/main.c    ****   ******************************************************************************
  39:Src/main.c    ****   */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "stm32f0xx_hal.h"
  44:Src/main.c    **** void _Error_Handler(char * file, int line);
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PV */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** //Initialize all four LEDs
  70:Src/main.c    **** void init_leds(void)
  71:Src/main.c    **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  72:Src/main.c    ****   //Initialize red LED, PC6
  73:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER6_0; //General purpose output
  32              		.loc 1 73 3 view .LVU1
  33              		.loc 1 73 8 is_stmt 0 view .LVU2
  34 0000 2C4B     		ldr	r3, .L2
  35 0002 1968     		ldr	r1, [r3]
  36              		.loc 1 73 16 view .LVU3
  37 0004 8022     		movs	r2, #128
  38 0006 5201     		lsls	r2, r2, #5
  39 0008 0A43     		orrs	r2, r1
  40 000a 1A60     		str	r2, [r3]
  74:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_6; // Push-pull
  41              		.loc 1 74 3 is_stmt 1 view .LVU4
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 3


  42              		.loc 1 74 8 is_stmt 0 view .LVU5
  43 000c 5A68     		ldr	r2, [r3, #4]
  44              		.loc 1 74 17 view .LVU6
  45 000e 4021     		movs	r1, #64
  46 0010 8A43     		bics	r2, r1
  47 0012 5A60     		str	r2, [r3, #4]
  75:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR6_0; //Low speed
  48              		.loc 1 75 3 is_stmt 1 view .LVU7
  49              		.loc 1 75 8 is_stmt 0 view .LVU8
  50 0014 9A68     		ldr	r2, [r3, #8]
  51              		.loc 1 75 18 view .LVU9
  52 0016 2849     		ldr	r1, .L2+4
  53 0018 0A40     		ands	r2, r1
  54 001a 9A60     		str	r2, [r3, #8]
  76:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR6_0 | GPIO_PUPDR_PUPDR6_1); //No pull up or down
  55              		.loc 1 76 3 is_stmt 1 view .LVU10
  56              		.loc 1 76 8 is_stmt 0 view .LVU11
  57 001c DA68     		ldr	r2, [r3, #12]
  58              		.loc 1 76 16 view .LVU12
  59 001e 2749     		ldr	r1, .L2+8
  60 0020 0A40     		ands	r2, r1
  61 0022 DA60     		str	r2, [r3, #12]
  77:Src/main.c    **** 
  78:Src/main.c    ****   //Initialize blue LED, PC7
  79:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER7_0; //General purpose output
  62              		.loc 1 79 3 is_stmt 1 view .LVU13
  63              		.loc 1 79 8 is_stmt 0 view .LVU14
  64 0024 1968     		ldr	r1, [r3]
  65              		.loc 1 79 16 view .LVU15
  66 0026 8022     		movs	r2, #128
  67 0028 D201     		lsls	r2, r2, #7
  68 002a 0A43     		orrs	r2, r1
  69 002c 1A60     		str	r2, [r3]
  80:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_7; // Push-pull
  70              		.loc 1 80 3 is_stmt 1 view .LVU16
  71              		.loc 1 80 8 is_stmt 0 view .LVU17
  72 002e 5A68     		ldr	r2, [r3, #4]
  73              		.loc 1 80 17 view .LVU18
  74 0030 8021     		movs	r1, #128
  75 0032 8A43     		bics	r2, r1
  76 0034 5A60     		str	r2, [r3, #4]
  81:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR7_0; //Low speed
  77              		.loc 1 81 3 is_stmt 1 view .LVU19
  78              		.loc 1 81 8 is_stmt 0 view .LVU20
  79 0036 9A68     		ldr	r2, [r3, #8]
  80              		.loc 1 81 18 view .LVU21
  81 0038 2149     		ldr	r1, .L2+12
  82 003a 0A40     		ands	r2, r1
  83 003c 9A60     		str	r2, [r3, #8]
  82:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR7_0 | GPIO_PUPDR_PUPDR7_1); //No pull up or down
  84              		.loc 1 82 3 is_stmt 1 view .LVU22
  85              		.loc 1 82 8 is_stmt 0 view .LVU23
  86 003e DA68     		ldr	r2, [r3, #12]
  87              		.loc 1 82 16 view .LVU24
  88 0040 2049     		ldr	r1, .L2+16
  89 0042 0A40     		ands	r2, r1
  90 0044 DA60     		str	r2, [r3, #12]
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 4


  83:Src/main.c    **** 
  84:Src/main.c    ****   //Initialize orange LED, PC8
  85:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER8_0; //General purpose output
  91              		.loc 1 85 3 is_stmt 1 view .LVU25
  92              		.loc 1 85 8 is_stmt 0 view .LVU26
  93 0046 1968     		ldr	r1, [r3]
  94              		.loc 1 85 16 view .LVU27
  95 0048 8022     		movs	r2, #128
  96 004a 5202     		lsls	r2, r2, #9
  97 004c 0A43     		orrs	r2, r1
  98 004e 1A60     		str	r2, [r3]
  86:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_8; // Push-pull
  99              		.loc 1 86 3 is_stmt 1 view .LVU28
 100              		.loc 1 86 8 is_stmt 0 view .LVU29
 101 0050 5A68     		ldr	r2, [r3, #4]
 102              		.loc 1 86 17 view .LVU30
 103 0052 1D49     		ldr	r1, .L2+20
 104 0054 0A40     		ands	r2, r1
 105 0056 5A60     		str	r2, [r3, #4]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR8_0; //Low speed
 106              		.loc 1 87 3 is_stmt 1 view .LVU31
 107              		.loc 1 87 8 is_stmt 0 view .LVU32
 108 0058 9A68     		ldr	r2, [r3, #8]
 109              		.loc 1 87 18 view .LVU33
 110 005a 1C49     		ldr	r1, .L2+24
 111 005c 0A40     		ands	r2, r1
 112 005e 9A60     		str	r2, [r3, #8]
  88:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR8_0 | GPIO_PUPDR_PUPDR8_1); //No pull up or down
 113              		.loc 1 88 3 is_stmt 1 view .LVU34
 114              		.loc 1 88 8 is_stmt 0 view .LVU35
 115 0060 DA68     		ldr	r2, [r3, #12]
 116              		.loc 1 88 16 view .LVU36
 117 0062 1B49     		ldr	r1, .L2+28
 118 0064 0A40     		ands	r2, r1
 119 0066 DA60     		str	r2, [r3, #12]
  89:Src/main.c    **** 
  90:Src/main.c    ****   //Initialize green LED, PC9
  91:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER9_0; //General purpose output
 120              		.loc 1 91 3 is_stmt 1 view .LVU37
 121              		.loc 1 91 8 is_stmt 0 view .LVU38
 122 0068 1968     		ldr	r1, [r3]
 123              		.loc 1 91 16 view .LVU39
 124 006a 8022     		movs	r2, #128
 125 006c D202     		lsls	r2, r2, #11
 126 006e 0A43     		orrs	r2, r1
 127 0070 1A60     		str	r2, [r3]
  92:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_9; // Push-pull
 128              		.loc 1 92 3 is_stmt 1 view .LVU40
 129              		.loc 1 92 8 is_stmt 0 view .LVU41
 130 0072 5A68     		ldr	r2, [r3, #4]
 131              		.loc 1 92 17 view .LVU42
 132 0074 1749     		ldr	r1, .L2+32
 133 0076 0A40     		ands	r2, r1
 134 0078 5A60     		str	r2, [r3, #4]
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR9_0; //Low speed
 135              		.loc 1 93 3 is_stmt 1 view .LVU43
 136              		.loc 1 93 8 is_stmt 0 view .LVU44
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 5


 137 007a 9A68     		ldr	r2, [r3, #8]
 138              		.loc 1 93 18 view .LVU45
 139 007c 1649     		ldr	r1, .L2+36
 140 007e 0A40     		ands	r2, r1
 141 0080 9A60     		str	r2, [r3, #8]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(GPIO_PUPDR_PUPDR9_0 | GPIO_PUPDR_PUPDR9_1); //No pull up or down
 142              		.loc 1 94 3 is_stmt 1 view .LVU46
 143              		.loc 1 94 8 is_stmt 0 view .LVU47
 144 0082 DA68     		ldr	r2, [r3, #12]
 145              		.loc 1 94 16 view .LVU48
 146 0084 1549     		ldr	r1, .L2+40
 147 0086 0A40     		ands	r2, r1
 148 0088 DA60     		str	r2, [r3, #12]
  95:Src/main.c    **** 
  96:Src/main.c    ****   //Set all LEDs off
  97:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_6;
 149              		.loc 1 97 3 is_stmt 1 view .LVU49
 150              		.loc 1 97 8 is_stmt 0 view .LVU50
 151 008a 9969     		ldr	r1, [r3, #24]
 152              		.loc 1 97 15 view .LVU51
 153 008c 8022     		movs	r2, #128
 154 008e D203     		lsls	r2, r2, #15
 155 0090 0A43     		orrs	r2, r1
 156 0092 9A61     		str	r2, [r3, #24]
  98:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_7;
 157              		.loc 1 98 3 is_stmt 1 view .LVU52
 158              		.loc 1 98 8 is_stmt 0 view .LVU53
 159 0094 9969     		ldr	r1, [r3, #24]
 160              		.loc 1 98 15 view .LVU54
 161 0096 8022     		movs	r2, #128
 162 0098 1204     		lsls	r2, r2, #16
 163 009a 0A43     		orrs	r2, r1
 164 009c 9A61     		str	r2, [r3, #24]
  99:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_8;
 165              		.loc 1 99 3 is_stmt 1 view .LVU55
 166              		.loc 1 99 8 is_stmt 0 view .LVU56
 167 009e 9969     		ldr	r1, [r3, #24]
 168              		.loc 1 99 15 view .LVU57
 169 00a0 8022     		movs	r2, #128
 170 00a2 5204     		lsls	r2, r2, #17
 171 00a4 0A43     		orrs	r2, r1
 172 00a6 9A61     		str	r2, [r3, #24]
 100:Src/main.c    ****   GPIOC->BSRR |= GPIO_BSRR_BR_9;
 173              		.loc 1 100 3 is_stmt 1 view .LVU58
 174              		.loc 1 100 8 is_stmt 0 view .LVU59
 175 00a8 9969     		ldr	r1, [r3, #24]
 176              		.loc 1 100 15 view .LVU60
 177 00aa 8022     		movs	r2, #128
 178 00ac 9204     		lsls	r2, r2, #18
 179 00ae 0A43     		orrs	r2, r1
 180 00b0 9A61     		str	r2, [r3, #24]
 101:Src/main.c    **** }
 181              		.loc 1 101 1 view .LVU61
 182              		@ sp needed
 183 00b2 7047     		bx	lr
 184              	.L3:
 185              		.align	2
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 6


 186              	.L2:
 187 00b4 00080048 		.word	1207961600
 188 00b8 FFEFFFFF 		.word	-4097
 189 00bc FFCFFFFF 		.word	-12289
 190 00c0 FFBFFFFF 		.word	-16385
 191 00c4 FF3FFFFF 		.word	-49153
 192 00c8 FFFEFFFF 		.word	-257
 193 00cc FFFFFEFF 		.word	-65537
 194 00d0 FFFFFCFF 		.word	-196609
 195 00d4 FFFDFFFF 		.word	-513
 196 00d8 FFFFFBFF 		.word	-262145
 197 00dc FFFFF3FF 		.word	-786433
 198              		.cfi_endproc
 199              	.LFE40:
 201              		.section	.text.init_uart,"ax",%progbits
 202              		.align	1
 203              		.global	init_uart
 204              		.syntax unified
 205              		.code	16
 206              		.thumb_func
 208              	init_uart:
 209              	.LFB41:
 102:Src/main.c    **** 
 103:Src/main.c    **** //Initialize USART3 for debugging
 104:Src/main.c    **** void init_uart(void)
 105:Src/main.c    **** {
 210              		.loc 1 105 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 106:Src/main.c    ****   //Set pin PC4 for USART TX
 107:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER4_1; //Alternate function
 215              		.loc 1 107 3 view .LVU63
 216              		.loc 1 107 8 is_stmt 0 view .LVU64
 217 0000 284B     		ldr	r3, .L5
 218 0002 1968     		ldr	r1, [r3]
 219              		.loc 1 107 16 view .LVU65
 220 0004 8022     		movs	r2, #128
 221 0006 9200     		lsls	r2, r2, #2
 222 0008 0A43     		orrs	r2, r1
 223 000a 1A60     		str	r2, [r3]
 108:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_4; // Push-pull
 224              		.loc 1 108 3 is_stmt 1 view .LVU66
 225              		.loc 1 108 8 is_stmt 0 view .LVU67
 226 000c 5A68     		ldr	r2, [r3, #4]
 227              		.loc 1 108 17 view .LVU68
 228 000e 1021     		movs	r1, #16
 229 0010 8A43     		bics	r2, r1
 230 0012 5A60     		str	r2, [r3, #4]
 109:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR4_0; //Low speed
 231              		.loc 1 109 3 is_stmt 1 view .LVU69
 232              		.loc 1 109 8 is_stmt 0 view .LVU70
 233 0014 9A68     		ldr	r2, [r3, #8]
 234              		.loc 1 109 18 view .LVU71
 235 0016 2449     		ldr	r1, .L5+4
 236 0018 0A40     		ands	r2, r1
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 7


 237 001a 9A60     		str	r2, [r3, #8]
 110:Src/main.c    ****   GPIOC->PUPDR |= GPIO_PUPDR_PUPDR4_0; //Pull up
 238              		.loc 1 110 3 is_stmt 1 view .LVU72
 239              		.loc 1 110 8 is_stmt 0 view .LVU73
 240 001c D968     		ldr	r1, [r3, #12]
 241              		.loc 1 110 16 view .LVU74
 242 001e 8022     		movs	r2, #128
 243 0020 5200     		lsls	r2, r2, #1
 244 0022 0A43     		orrs	r2, r1
 245 0024 DA60     		str	r2, [r3, #12]
 111:Src/main.c    ****   //Set pin PC5 for USART RX
 112:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER5_1; //Alternate function
 246              		.loc 1 112 3 is_stmt 1 view .LVU75
 247              		.loc 1 112 8 is_stmt 0 view .LVU76
 248 0026 1968     		ldr	r1, [r3]
 249              		.loc 1 112 16 view .LVU77
 250 0028 8022     		movs	r2, #128
 251 002a 1201     		lsls	r2, r2, #4
 252 002c 0A43     		orrs	r2, r1
 253 002e 1A60     		str	r2, [r3]
 113:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_5; // Push-pull
 254              		.loc 1 113 3 is_stmt 1 view .LVU78
 255              		.loc 1 113 8 is_stmt 0 view .LVU79
 256 0030 5A68     		ldr	r2, [r3, #4]
 257              		.loc 1 113 17 view .LVU80
 258 0032 2021     		movs	r1, #32
 259 0034 8A43     		bics	r2, r1
 260 0036 5A60     		str	r2, [r3, #4]
 114:Src/main.c    ****   GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEEDR5_0; //Low speed
 261              		.loc 1 114 3 is_stmt 1 view .LVU81
 262              		.loc 1 114 8 is_stmt 0 view .LVU82
 263 0038 9A68     		ldr	r2, [r3, #8]
 264              		.loc 1 114 18 view .LVU83
 265 003a 1C49     		ldr	r1, .L5+8
 266 003c 0A40     		ands	r2, r1
 267 003e 9A60     		str	r2, [r3, #8]
 115:Src/main.c    ****   GPIOC->PUPDR |= GPIO_PUPDR_PUPDR5_0; //Pull up
 268              		.loc 1 115 3 is_stmt 1 view .LVU84
 269              		.loc 1 115 8 is_stmt 0 view .LVU85
 270 0040 D868     		ldr	r0, [r3, #12]
 271              		.loc 1 115 16 view .LVU86
 272 0042 8022     		movs	r2, #128
 273 0044 D200     		lsls	r2, r2, #3
 274 0046 0243     		orrs	r2, r0
 275 0048 DA60     		str	r2, [r3, #12]
 116:Src/main.c    ****   //-GPIOC->AFR[0] &= 0xFFFF44FF;
 117:Src/main.c    ****   GPIOC->AFR[0] |= 0x00110000;
 276              		.loc 1 117 3 is_stmt 1 view .LVU87
 277              		.loc 1 117 13 is_stmt 0 view .LVU88
 278 004a 186A     		ldr	r0, [r3, #32]
 279              		.loc 1 117 17 view .LVU89
 280 004c 8822     		movs	r2, #136
 281 004e 5203     		lsls	r2, r2, #13
 282 0050 0243     		orrs	r2, r0
 283 0052 1A62     		str	r2, [r3, #32]
 118:Src/main.c    **** 
 119:Src/main.c    ****   //Enable clock to USART3
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 8


 120:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 284              		.loc 1 120 3 is_stmt 1 view .LVU90
 285              		.loc 1 120 6 is_stmt 0 view .LVU91
 286 0054 164A     		ldr	r2, .L5+12
 287 0056 D069     		ldr	r0, [r2, #28]
 288              		.loc 1 120 16 view .LVU92
 289 0058 8023     		movs	r3, #128
 290 005a DB02     		lsls	r3, r3, #11
 291 005c 0343     		orrs	r3, r0
 292 005e D361     		str	r3, [r2, #28]
 121:Src/main.c    ****   //Set word length to 8 bits
 122:Src/main.c    ****   USART3->CR1 &= ~USART_CR1_M1;
 293              		.loc 1 122 3 is_stmt 1 view .LVU93
 294              		.loc 1 122 9 is_stmt 0 view .LVU94
 295 0060 144B     		ldr	r3, .L5+16
 296 0062 1A68     		ldr	r2, [r3]
 297              		.loc 1 122 15 view .LVU95
 298 0064 1448     		ldr	r0, .L5+20
 299 0066 0240     		ands	r2, r0
 300 0068 1A60     		str	r2, [r3]
 123:Src/main.c    ****   USART3->CR1 &= ~USART_CR1_M0;
 301              		.loc 1 123 3 is_stmt 1 view .LVU96
 302              		.loc 1 123 9 is_stmt 0 view .LVU97
 303 006a 1A68     		ldr	r2, [r3]
 304              		.loc 1 123 15 view .LVU98
 305 006c 1348     		ldr	r0, .L5+24
 306 006e 0240     		ands	r2, r0
 307 0070 1A60     		str	r2, [r3]
 124:Src/main.c    ****   //Set baud rate to 115200 bits/sec
 125:Src/main.c    ****   USART3->BRR = 0x45;
 308              		.loc 1 125 3 is_stmt 1 view .LVU99
 309              		.loc 1 125 15 is_stmt 0 view .LVU100
 310 0072 4522     		movs	r2, #69
 311 0074 DA60     		str	r2, [r3, #12]
 126:Src/main.c    ****   //Set stop bits to 1
 127:Src/main.c    ****   USART3->CR2 &= ~USART_CR2_STOP_0;
 312              		.loc 1 127 3 is_stmt 1 view .LVU101
 313              		.loc 1 127 9 is_stmt 0 view .LVU102
 314 0076 5A68     		ldr	r2, [r3, #4]
 315              		.loc 1 127 15 view .LVU103
 316 0078 0240     		ands	r2, r0
 317 007a 5A60     		str	r2, [r3, #4]
 128:Src/main.c    ****   USART3->CR2 &= ~USART_CR2_STOP_1;
 318              		.loc 1 128 3 is_stmt 1 view .LVU104
 319              		.loc 1 128 9 is_stmt 0 view .LVU105
 320 007c 5A68     		ldr	r2, [r3, #4]
 321              		.loc 1 128 15 view .LVU106
 322 007e 1048     		ldr	r0, .L5+28
 323 0080 0240     		ands	r2, r0
 324 0082 5A60     		str	r2, [r3, #4]
 129:Src/main.c    ****   //Set no parity
 130:Src/main.c    ****   USART3->CR1 &= ~USART_CR1_PCE;
 325              		.loc 1 130 3 is_stmt 1 view .LVU107
 326              		.loc 1 130 9 is_stmt 0 view .LVU108
 327 0084 1A68     		ldr	r2, [r3]
 328              		.loc 1 130 15 view .LVU109
 329 0086 0A40     		ands	r2, r1
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 9


 330 0088 1A60     		str	r2, [r3]
 131:Src/main.c    ****   //Enable transmitter and receiver
 132:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE;
 331              		.loc 1 132 3 is_stmt 1 view .LVU110
 332              		.loc 1 132 9 is_stmt 0 view .LVU111
 333 008a 1A68     		ldr	r2, [r3]
 334              		.loc 1 132 15 view .LVU112
 335 008c 0821     		movs	r1, #8
 336 008e 0A43     		orrs	r2, r1
 337 0090 1A60     		str	r2, [r3]
 133:Src/main.c    ****   USART3->CR1 |= USART_CR1_RE;
 338              		.loc 1 133 3 is_stmt 1 view .LVU113
 339              		.loc 1 133 9 is_stmt 0 view .LVU114
 340 0092 1A68     		ldr	r2, [r3]
 341              		.loc 1 133 15 view .LVU115
 342 0094 0439     		subs	r1, r1, #4
 343 0096 0A43     		orrs	r2, r1
 344 0098 1A60     		str	r2, [r3]
 134:Src/main.c    ****   //Enable USART peripheral
 135:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;  
 345              		.loc 1 135 3 is_stmt 1 view .LVU116
 346              		.loc 1 135 9 is_stmt 0 view .LVU117
 347 009a 1A68     		ldr	r2, [r3]
 348              		.loc 1 135 15 view .LVU118
 349 009c 0339     		subs	r1, r1, #3
 350 009e 0A43     		orrs	r2, r1
 351 00a0 1A60     		str	r2, [r3]
 136:Src/main.c    **** }
 352              		.loc 1 136 1 view .LVU119
 353              		@ sp needed
 354 00a2 7047     		bx	lr
 355              	.L6:
 356              		.align	2
 357              	.L5:
 358 00a4 00080048 		.word	1207961600
 359 00a8 FFFEFFFF 		.word	-257
 360 00ac FFFBFFFF 		.word	-1025
 361 00b0 00100240 		.word	1073876992
 362 00b4 00480040 		.word	1073760256
 363 00b8 FFFFFFEF 		.word	-268435457
 364 00bc FFEFFFFF 		.word	-4097
 365 00c0 FFDFFFFF 		.word	-8193
 366              		.cfi_endproc
 367              	.LFE41:
 369              		.section	.text.transmit_char,"ax",%progbits
 370              		.align	1
 371              		.global	transmit_char
 372              		.syntax unified
 373              		.code	16
 374              		.thumb_func
 376              	transmit_char:
 377              	.LFB42:
 137:Src/main.c    **** 
 138:Src/main.c    **** //Transmits one character over UART
 139:Src/main.c    **** void transmit_char(char c)
 140:Src/main.c    **** {
 378              		.loc 1 140 1 is_stmt 1 view -0
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 10


 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LVL0:
 384              	.L8:
 141:Src/main.c    ****   //Wait until USART transmit register is empty
 142:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TC)) {}
 385              		.loc 1 142 42 discriminator 1 view .LVU121
 386              		.loc 1 142 10 discriminator 1 view .LVU122
 387              		.loc 1 142 18 is_stmt 0 discriminator 1 view .LVU123
 388 0000 034B     		ldr	r3, .L10
 389 0002 DB69     		ldr	r3, [r3, #28]
 390              		.loc 1 142 10 discriminator 1 view .LVU124
 391 0004 5B06     		lsls	r3, r3, #25
 392 0006 FBD5     		bpl	.L8
 143:Src/main.c    ****   //Write character to transmit register
 144:Src/main.c    ****   USART3->TDR = c;
 393              		.loc 1 144 3 is_stmt 1 view .LVU125
 394              		.loc 1 144 15 is_stmt 0 view .LVU126
 395 0008 014B     		ldr	r3, .L10
 396 000a 1885     		strh	r0, [r3, #40]
 145:Src/main.c    **** }
 397              		.loc 1 145 1 view .LVU127
 398              		@ sp needed
 399 000c 7047     		bx	lr
 400              	.L11:
 401 000e C046     		.align	2
 402              	.L10:
 403 0010 00480040 		.word	1073760256
 404              		.cfi_endproc
 405              	.LFE42:
 407              		.global	__aeabi_idivmod
 408              		.global	__aeabi_idiv
 409              		.section	.text.transmit_val,"ax",%progbits
 410              		.align	1
 411              		.global	transmit_val
 412              		.syntax unified
 413              		.code	16
 414              		.thumb_func
 416              	transmit_val:
 417              	.LVL1:
 418              	.LFB43:
 146:Src/main.c    **** 
 147:Src/main.c    **** void transmit_val(int16_t val)
 148:Src/main.c    **** {
 419              		.loc 1 148 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		.loc 1 148 1 is_stmt 0 view .LVU129
 424 0000 30B5     		push	{r4, r5, lr}
 425              	.LCFI0:
 426              		.cfi_def_cfa_offset 12
 427              		.cfi_offset 4, -12
 428              		.cfi_offset 5, -8
 429              		.cfi_offset 14, -4
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 11


 430 0002 83B0     		sub	sp, sp, #12
 431              	.LCFI1:
 432              		.cfi_def_cfa_offset 24
 433 0004 041E     		subs	r4, r0, #0
 149:Src/main.c    ****   uint8_t num[5];
 434              		.loc 1 149 3 is_stmt 1 view .LVU130
 150:Src/main.c    **** 
 151:Src/main.c    ****   if (val < 0)
 435              		.loc 1 151 3 view .LVU131
 436              		.loc 1 151 6 is_stmt 0 view .LVU132
 437 0006 04DB     		blt	.L19
 152:Src/main.c    ****   {
 153:Src/main.c    ****     val = ~val;
 154:Src/main.c    ****     val += 1;
 155:Src/main.c    ****     transmit_char('-');
 156:Src/main.c    ****   }
 157:Src/main.c    ****   else
 158:Src/main.c    ****     transmit_char(' ');
 438              		.loc 1 158 5 is_stmt 1 view .LVU133
 439 0008 2020     		movs	r0, #32
 440              	.LVL2:
 441              		.loc 1 158 5 is_stmt 0 view .LVU134
 442 000a FFF7FEFF 		bl	transmit_char
 443              	.LVL3:
 444              	.L14:
 148:Src/main.c    ****   uint8_t num[5];
 445              		.loc 1 148 1 view .LVU135
 446 000e 0025     		movs	r5, #0
 447 0010 11E0     		b	.L15
 448              	.LVL4:
 449              	.L19:
 153:Src/main.c    ****     val += 1;
 450              		.loc 1 153 5 is_stmt 1 view .LVU136
 154:Src/main.c    ****     transmit_char('-');
 451              		.loc 1 154 5 view .LVU137
 154:Src/main.c    ****     transmit_char('-');
 452              		.loc 1 154 9 is_stmt 0 view .LVU138
 453 0012 4442     		rsbs	r4, r0, #0
 454 0014 24B2     		sxth	r4, r4
 455              	.LVL5:
 155:Src/main.c    ****   }
 456              		.loc 1 155 5 is_stmt 1 view .LVU139
 457 0016 2D20     		movs	r0, #45
 458 0018 FFF7FEFF 		bl	transmit_char
 459              	.LVL6:
 460 001c F7E7     		b	.L14
 461              	.LVL7:
 462              	.L16:
 463              	.LBB2:
 159:Src/main.c    ****     
 160:Src/main.c    ****   for (int i = 0; i < 5; i++)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     num[i] = val % 10;
 464              		.loc 1 162 5 view .LVU140
 465              		.loc 1 162 12 is_stmt 0 view .LVU141
 466 001e 0A21     		movs	r1, #10
 467 0020 2000     		movs	r0, r4
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 12


 468 0022 FFF7FEFF 		bl	__aeabi_idivmod
 469              	.LVL8:
 470 0026 6B46     		mov	r3, sp
 471 0028 5955     		strb	r1, [r3, r5]
 163:Src/main.c    ****     val /= 10;
 472              		.loc 1 163 5 is_stmt 1 view .LVU142
 473              		.loc 1 163 9 is_stmt 0 view .LVU143
 474 002a 0A21     		movs	r1, #10
 475 002c 2000     		movs	r0, r4
 476 002e FFF7FEFF 		bl	__aeabi_idiv
 477              	.LVL9:
 478 0032 04B2     		sxth	r4, r0
 479              	.LVL10:
 160:Src/main.c    ****   {
 480              		.loc 1 160 27 is_stmt 1 discriminator 3 view .LVU144
 481 0034 0135     		adds	r5, r5, #1
 482              	.LVL11:
 483              	.L15:
 160:Src/main.c    ****   {
 484              		.loc 1 160 21 discriminator 1 view .LVU145
 485 0036 042D     		cmp	r5, #4
 486 0038 F1DD     		ble	.L16
 487              	.LBE2:
 488              	.LBB3:
 164:Src/main.c    ****   }
 165:Src/main.c    ****   for (int i = 4; i >=0; i--)
 489              		.loc 1 165 12 is_stmt 0 view .LVU146
 490 003a 0424     		movs	r4, #4
 491              	.LVL12:
 492              		.loc 1 165 12 view .LVU147
 493 003c 06E0     		b	.L17
 494              	.LVL13:
 495              	.L18:
 166:Src/main.c    ****     transmit_char(num[i]+48);
 496              		.loc 1 166 5 is_stmt 1 view .LVU148
 497              		.loc 1 166 22 is_stmt 0 view .LVU149
 498 003e 6B46     		mov	r3, sp
 499 0040 185D     		ldrb	r0, [r3, r4]
 500              		.loc 1 166 5 view .LVU150
 501 0042 3030     		adds	r0, r0, #48
 502 0044 C0B2     		uxtb	r0, r0
 503 0046 FFF7FEFF 		bl	transmit_char
 504              	.LVL14:
 165:Src/main.c    ****     transmit_char(num[i]+48);
 505              		.loc 1 165 27 is_stmt 1 discriminator 3 view .LVU151
 506 004a 013C     		subs	r4, r4, #1
 507              	.LVL15:
 508              	.L17:
 165:Src/main.c    ****     transmit_char(num[i]+48);
 509              		.loc 1 165 21 discriminator 1 view .LVU152
 510 004c 002C     		cmp	r4, #0
 511 004e F6DA     		bge	.L18
 512              	.LBE3:
 167:Src/main.c    **** 
 168:Src/main.c    ****   transmit_char('\n');
 513              		.loc 1 168 3 view .LVU153
 514 0050 0A20     		movs	r0, #10
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 13


 515 0052 FFF7FEFF 		bl	transmit_char
 516              	.LVL16:
 169:Src/main.c    ****   transmit_char('\r');
 517              		.loc 1 169 3 view .LVU154
 518 0056 0D20     		movs	r0, #13
 519 0058 FFF7FEFF 		bl	transmit_char
 520              	.LVL17:
 170:Src/main.c    **** }
 521              		.loc 1 170 1 is_stmt 0 view .LVU155
 522 005c 03B0     		add	sp, sp, #12
 523              		@ sp needed
 524              	.LVL18:
 525              	.LVL19:
 526              		.loc 1 170 1 view .LVU156
 527 005e 30BD     		pop	{r4, r5, pc}
 528              		.cfi_endproc
 529              	.LFE43:
 531              		.section	.text.read_axis,"ax",%progbits
 532              		.align	1
 533              		.global	read_axis
 534              		.syntax unified
 535              		.code	16
 536              		.thumb_func
 538              	read_axis:
 539              	.LVL20:
 540              	.LFB44:
 171:Src/main.c    **** 
 172:Src/main.c    **** /*
 173:Src/main.c    **** void transmit_val(int16_t val)
 174:Src/main.c    **** {
 175:Src/main.c    ****   int bin[16];
 176:Src/main.c    **** 
 177:Src/main.c    ****   for (int i = 15; i >=0; i--)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     bin[i] = (val >> i) & 1;
 180:Src/main.c    ****     transmit_char(bin[i]+48);
 181:Src/main.c    ****   }
 182:Src/main.c    ****   transmit_char('\n');
 183:Src/main.c    ****   transmit_char('\r');
 184:Src/main.c    **** }
 185:Src/main.c    **** */
 186:Src/main.c    **** 
 187:Src/main.c    **** int16_t read_axis(char axis)
 188:Src/main.c    **** {
 541              		.loc 1 188 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		.loc 1 188 1 is_stmt 0 view .LVU158
 546 0000 10B5     		push	{r4, lr}
 547              	.LCFI2:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
 189:Src/main.c    ****   //Set gyro I2C address to X or Y axis
 190:Src/main.c    ****   uint16_t axis_address;
 551              		.loc 1 190 3 is_stmt 1 view .LVU159
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 14


 191:Src/main.c    ****   int16_t low = 0, high = 0, axis_value = 0;
 552              		.loc 1 191 3 view .LVU160
 553              	.LVL21:
 192:Src/main.c    ****   if (axis == 'x')
 554              		.loc 1 192 3 view .LVU161
 555              		.loc 1 192 6 is_stmt 0 view .LVU162
 556 0002 7828     		cmp	r0, #120
 557 0004 03D0     		beq	.L31
 193:Src/main.c    ****     axis_address = 0xA8;
 194:Src/main.c    ****   else if (axis == 'y')
 558              		.loc 1 194 8 is_stmt 1 view .LVU163
 559              		.loc 1 194 11 is_stmt 0 view .LVU164
 560 0006 7928     		cmp	r0, #121
 561 0008 65D1     		bne	.L32
 195:Src/main.c    ****     axis_address = 0xAA;
 562              		.loc 1 195 18 view .LVU165
 563 000a AA21     		movs	r1, #170
 564 000c 00E0     		b	.L21
 565              	.L31:
 193:Src/main.c    ****     axis_address = 0xA8;
 566              		.loc 1 193 18 view .LVU166
 567 000e A821     		movs	r1, #168
 568              	.L21:
 569              	.LVL22:
 196:Src/main.c    ****   else
 197:Src/main.c    ****     return 0;
 198:Src/main.c    **** 
 199:Src/main.c    ****   //Configure I2C to write to gyro
 200:Src/main.c    ****   I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));
 570              		.loc 1 200 3 is_stmt 1 view .LVU167
 571              		.loc 1 200 7 is_stmt 0 view .LVU168
 572 0010 354B     		ldr	r3, .L44
 573 0012 5A68     		ldr	r2, [r3, #4]
 574              		.loc 1 200 13 view .LVU169
 575 0014 3548     		ldr	r0, .L44+4
 576              	.LVL23:
 577              		.loc 1 200 13 view .LVU170
 578 0016 0240     		ands	r2, r0
 579 0018 5A60     		str	r2, [r3, #4]
 201:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 580              		.loc 1 201 3 is_stmt 1 view .LVU171
 581              		.loc 1 201 7 is_stmt 0 view .LVU172
 582 001a 5868     		ldr	r0, [r3, #4]
 583              		.loc 1 201 13 view .LVU173
 584 001c 344A     		ldr	r2, .L44+8
 585 001e 0243     		orrs	r2, r0
 586 0020 5A60     		str	r2, [r3, #4]
 202:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 587              		.loc 1 202 3 is_stmt 1 view .LVU174
 588              		.loc 1 202 7 is_stmt 0 view .LVU175
 589 0022 5A68     		ldr	r2, [r3, #4]
 590              		.loc 1 202 13 view .LVU176
 591 0024 3348     		ldr	r0, .L44+12
 592 0026 0240     		ands	r2, r0
 593 0028 5A60     		str	r2, [r3, #4]
 203:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 594              		.loc 1 203 3 is_stmt 1 view .LVU177
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 15


 595              		.loc 1 203 7 is_stmt 0 view .LVU178
 596 002a 5868     		ldr	r0, [r3, #4]
 597              		.loc 1 203 13 view .LVU179
 598 002c 8022     		movs	r2, #128
 599 002e 9201     		lsls	r2, r2, #6
 600 0030 0243     		orrs	r2, r0
 601 0032 5A60     		str	r2, [r3, #4]
 204:Src/main.c    ****   
 205:Src/main.c    ****   //Wait until either TXIS or NACKF flags are set
 206:Src/main.c    ****   while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_TXIS)) {}
 602              		.loc 1 206 3 is_stmt 1 view .LVU180
 603              	.L24:
 604              		.loc 1 206 72 discriminator 2 view .LVU181
 605              		.loc 1 206 39 discriminator 2 view .LVU182
 606              		.loc 1 206 16 is_stmt 0 discriminator 2 view .LVU183
 607 0034 2C4B     		ldr	r3, .L44
 608 0036 9B69     		ldr	r3, [r3, #24]
 609              		.loc 1 206 39 discriminator 2 view .LVU184
 610 0038 DB06     		lsls	r3, r3, #27
 611 003a 03D4     		bmi	.L23
 612              		.loc 1 206 48 discriminator 1 view .LVU185
 613 003c 2A4B     		ldr	r3, .L44
 614 003e 9B69     		ldr	r3, [r3, #24]
 615              		.loc 1 206 39 discriminator 1 view .LVU186
 616 0040 9B07     		lsls	r3, r3, #30
 617 0042 F7D5     		bpl	.L24
 618              	.L23:
 207:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 619              		.loc 1 207 3 is_stmt 1 view .LVU187
 620              		.loc 1 207 13 is_stmt 0 view .LVU188
 621 0044 284B     		ldr	r3, .L44
 622 0046 9B69     		ldr	r3, [r3, #24]
 623              		.loc 1 207 6 view .LVU189
 624 0048 DB06     		lsls	r3, r3, #27
 625 004a 46D4     		bmi	.L33
 208:Src/main.c    ****   {
 209:Src/main.c    ****     //Write addres of axis data register into I2C TXDR
 210:Src/main.c    ****     I2C2->TXDR = axis_address;
 626              		.loc 1 210 5 is_stmt 1 view .LVU190
 627              		.loc 1 210 16 is_stmt 0 view .LVU191
 628 004c 264B     		ldr	r3, .L44
 629 004e 9962     		str	r1, [r3, #40]
 211:Src/main.c    ****     //Wait until TC flag set
 212:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_TC)) {}
 630              		.loc 1 212 5 is_stmt 1 view .LVU192
 631              	.L25:
 632              		.loc 1 212 40 discriminator 1 view .LVU193
 633              		.loc 1 212 12 discriminator 1 view .LVU194
 634              		.loc 1 212 18 is_stmt 0 discriminator 1 view .LVU195
 635 0050 254B     		ldr	r3, .L44
 636 0052 9B69     		ldr	r3, [r3, #24]
 637              		.loc 1 212 12 discriminator 1 view .LVU196
 638 0054 5B06     		lsls	r3, r3, #25
 639 0056 FBD5     		bpl	.L25
 213:Src/main.c    ****     //Reconfigure I2C to read 2 bytes
 214:Src/main.c    ****     I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));  
 640              		.loc 1 214 5 is_stmt 1 view .LVU197
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 16


 641              		.loc 1 214 9 is_stmt 0 view .LVU198
 642 0058 234B     		ldr	r3, .L44
 643 005a 5A68     		ldr	r2, [r3, #4]
 644              		.loc 1 214 15 view .LVU199
 645 005c 2349     		ldr	r1, .L44+4
 646              	.LVL24:
 647              		.loc 1 214 15 view .LVU200
 648 005e 0A40     		ands	r2, r1
 649 0060 5A60     		str	r2, [r3, #4]
 215:Src/main.c    ****     I2C2->CR2 |= ((2 << 16) | (0x69 << 1));
 650              		.loc 1 215 5 is_stmt 1 view .LVU201
 651              		.loc 1 215 9 is_stmt 0 view .LVU202
 652 0062 5968     		ldr	r1, [r3, #4]
 653              		.loc 1 215 15 view .LVU203
 654 0064 244A     		ldr	r2, .L44+16
 655 0066 0A43     		orrs	r2, r1
 656 0068 5A60     		str	r2, [r3, #4]
 216:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 657              		.loc 1 216 5 is_stmt 1 view .LVU204
 658              		.loc 1 216 9 is_stmt 0 view .LVU205
 659 006a 5968     		ldr	r1, [r3, #4]
 660              		.loc 1 216 15 view .LVU206
 661 006c 8022     		movs	r2, #128
 662 006e D200     		lsls	r2, r2, #3
 663 0070 0A43     		orrs	r2, r1
 664 0072 5A60     		str	r2, [r3, #4]
 217:Src/main.c    ****     //set start bit again to perform restart
 218:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_START;
 665              		.loc 1 218 5 is_stmt 1 view .LVU207
 666              		.loc 1 218 9 is_stmt 0 view .LVU208
 667 0074 5968     		ldr	r1, [r3, #4]
 668              		.loc 1 218 15 view .LVU209
 669 0076 8022     		movs	r2, #128
 670 0078 9201     		lsls	r2, r2, #6
 671 007a 0A43     		orrs	r2, r1
 672 007c 5A60     		str	r2, [r3, #4]
 219:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 220:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_RXNE)) {}
 673              		.loc 1 220 5 is_stmt 1 view .LVU210
 674              	.L27:
 675              		.loc 1 220 74 discriminator 2 view .LVU211
 676              		.loc 1 220 41 discriminator 2 view .LVU212
 677              		.loc 1 220 18 is_stmt 0 discriminator 2 view .LVU213
 678 007e 1A4B     		ldr	r3, .L44
 679 0080 9B69     		ldr	r3, [r3, #24]
 680              		.loc 1 220 41 discriminator 2 view .LVU214
 681 0082 DB06     		lsls	r3, r3, #27
 682 0084 03D4     		bmi	.L26
 683              		.loc 1 220 50 discriminator 1 view .LVU215
 684 0086 184B     		ldr	r3, .L44
 685 0088 9B69     		ldr	r3, [r3, #24]
 686              		.loc 1 220 41 discriminator 1 view .LVU216
 687 008a 5B07     		lsls	r3, r3, #29
 688 008c F7D5     		bpl	.L27
 689              	.L26:
 221:Src/main.c    ****     if (!(I2C2->ISR & I2C_ISR_NACKF))
 690              		.loc 1 221 5 is_stmt 1 view .LVU217
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 17


 691              		.loc 1 221 15 is_stmt 0 view .LVU218
 692 008e 164B     		ldr	r3, .L44
 693 0090 9B69     		ldr	r3, [r3, #24]
 694              		.loc 1 221 8 view .LVU219
 695 0092 DB06     		lsls	r3, r3, #27
 696 0094 23D4     		bmi	.L34
 222:Src/main.c    ****     {
 223:Src/main.c    ****       //Read first byte
 224:Src/main.c    ****       low = I2C2->RXDR;
 697              		.loc 1 224 7 is_stmt 1 view .LVU220
 698              		.loc 1 224 17 is_stmt 0 view .LVU221
 699 0096 144B     		ldr	r3, .L44
 700 0098 586A     		ldr	r0, [r3, #36]
 701              		.loc 1 224 11 view .LVU222
 702 009a 00B2     		sxth	r0, r0
 703              	.LVL25:
 225:Src/main.c    ****     }
 226:Src/main.c    ****     else
 227:Src/main.c    ****       return 0;
 228:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 229:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_RXNE)) {}
 704              		.loc 1 229 5 is_stmt 1 view .LVU223
 705              	.L29:
 706              		.loc 1 229 74 discriminator 2 view .LVU224
 707              		.loc 1 229 41 discriminator 2 view .LVU225
 708              		.loc 1 229 18 is_stmt 0 discriminator 2 view .LVU226
 709 009c 124B     		ldr	r3, .L44
 710 009e 9B69     		ldr	r3, [r3, #24]
 711              		.loc 1 229 41 discriminator 2 view .LVU227
 712 00a0 DB06     		lsls	r3, r3, #27
 713 00a2 03D4     		bmi	.L28
 714              		.loc 1 229 50 discriminator 1 view .LVU228
 715 00a4 104B     		ldr	r3, .L44
 716 00a6 9B69     		ldr	r3, [r3, #24]
 717              		.loc 1 229 41 discriminator 1 view .LVU229
 718 00a8 5B07     		lsls	r3, r3, #29
 719 00aa F7D5     		bpl	.L29
 720              	.L28:
 230:Src/main.c    ****     if (!(I2C2->ISR & I2C_ISR_NACKF))
 721              		.loc 1 230 5 is_stmt 1 view .LVU230
 722              		.loc 1 230 15 is_stmt 0 view .LVU231
 723 00ac 0E4B     		ldr	r3, .L44
 724 00ae 9B69     		ldr	r3, [r3, #24]
 725              		.loc 1 230 8 view .LVU232
 726 00b0 DB06     		lsls	r3, r3, #27
 727 00b2 16D4     		bmi	.L35
 231:Src/main.c    ****     {
 232:Src/main.c    ****       //Read second byte
 233:Src/main.c    ****       high = I2C2->RXDR;
 728              		.loc 1 233 7 is_stmt 1 view .LVU233
 729              		.loc 1 233 18 is_stmt 0 view .LVU234
 730 00b4 0C4B     		ldr	r3, .L44
 731 00b6 5A6A     		ldr	r2, [r3, #36]
 732              		.loc 1 233 12 view .LVU235
 733 00b8 12B2     		sxth	r2, r2
 734              	.LVL26:
 234:Src/main.c    ****     }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 18


 235:Src/main.c    ****     else
 236:Src/main.c    ****       return 0;
 237:Src/main.c    ****     //Wait until transmission complete
 238:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_TC)) {}
 735              		.loc 1 238 5 is_stmt 1 view .LVU236
 736              	.L30:
 737              		.loc 1 238 40 discriminator 1 view .LVU237
 738              		.loc 1 238 12 discriminator 1 view .LVU238
 739              		.loc 1 238 18 is_stmt 0 discriminator 1 view .LVU239
 740 00ba 0B4B     		ldr	r3, .L44
 741 00bc 9B69     		ldr	r3, [r3, #24]
 742              		.loc 1 238 12 discriminator 1 view .LVU240
 743 00be 5B06     		lsls	r3, r3, #25
 744 00c0 FBD5     		bpl	.L30
 239:Src/main.c    ****     //Set STOP bit in CR2 to release I2C bus
 240:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_STOP;
 745              		.loc 1 240 5 is_stmt 1 view .LVU241
 746              		.loc 1 240 9 is_stmt 0 view .LVU242
 747 00c2 0949     		ldr	r1, .L44
 748 00c4 4C68     		ldr	r4, [r1, #4]
 749              		.loc 1 240 15 view .LVU243
 750 00c6 8023     		movs	r3, #128
 751 00c8 DB01     		lsls	r3, r3, #7
 752 00ca 2343     		orrs	r3, r4
 753 00cc 4B60     		str	r3, [r1, #4]
 241:Src/main.c    ****   }
 242:Src/main.c    ****   else
 243:Src/main.c    ****     return 0;
 244:Src/main.c    **** 
 245:Src/main.c    ****   axis_value = high << 8;
 754              		.loc 1 245 3 is_stmt 1 view .LVU244
 755              		.loc 1 245 14 is_stmt 0 view .LVU245
 756 00ce 1302     		lsls	r3, r2, #8
 757 00d0 1BB2     		sxth	r3, r3
 758              	.LVL27:
 246:Src/main.c    ****   axis_value |= low;
 759              		.loc 1 246 3 is_stmt 1 view .LVU246
 760              		.loc 1 246 14 is_stmt 0 view .LVU247
 761 00d2 1843     		orrs	r0, r3
 762              	.LVL28:
 247:Src/main.c    ****   return axis_value;
 763              		.loc 1 247 3 is_stmt 1 view .LVU248
 764              		.loc 1 247 10 is_stmt 0 view .LVU249
 765 00d4 00E0     		b	.L22
 766              	.LVL29:
 767              	.L32:
 197:Src/main.c    **** 
 768              		.loc 1 197 12 view .LVU250
 769 00d6 0020     		movs	r0, #0
 770              	.LVL30:
 771              	.L22:
 248:Src/main.c    **** }
 772              		.loc 1 248 1 view .LVU251
 773              		@ sp needed
 774 00d8 10BD     		pop	{r4, pc}
 775              	.LVL31:
 776              	.L33:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 19


 243:Src/main.c    **** 
 777              		.loc 1 243 12 view .LVU252
 778 00da 0020     		movs	r0, #0
 779 00dc FCE7     		b	.L22
 780              	.LVL32:
 781              	.L34:
 227:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 782              		.loc 1 227 14 view .LVU253
 783 00de 0020     		movs	r0, #0
 784 00e0 FAE7     		b	.L22
 785              	.LVL33:
 786              	.L35:
 236:Src/main.c    ****     //Wait until transmission complete
 787              		.loc 1 236 14 view .LVU254
 788 00e2 0020     		movs	r0, #0
 789              	.LVL34:
 236:Src/main.c    ****     //Wait until transmission complete
 790              		.loc 1 236 14 view .LVU255
 791 00e4 F8E7     		b	.L22
 792              	.L45:
 793 00e6 C046     		.align	2
 794              	.L44:
 795 00e8 00580040 		.word	1073764352
 796 00ec 00FC80FF 		.word	-8324096
 797 00f0 D2000100 		.word	65746
 798 00f4 FFFBFFFF 		.word	-1025
 799 00f8 D2000200 		.word	131282
 800              		.cfi_endproc
 801              	.LFE44:
 803              		.section	.text._Error_Handler,"ax",%progbits
 804              		.align	1
 805              		.global	_Error_Handler
 806              		.syntax unified
 807              		.code	16
 808              		.thumb_func
 810              	_Error_Handler:
 811              	.LFB47:
 249:Src/main.c    **** 
 250:Src/main.c    **** int main(void)
 251:Src/main.c    **** {
 252:Src/main.c    ****   SystemClock_Config();
 253:Src/main.c    **** 
 254:Src/main.c    ****   //Enable clock on GPIOB and GPIOC
 255:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 256:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 257:Src/main.c    **** 
 258:Src/main.c    ****   init_leds();
 259:Src/main.c    ****   init_uart();
 260:Src/main.c    **** 
 261:Src/main.c    ****   //Set PB11 to alternate function, open-drain output, I2C2_SDA
 262:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER11_1;
 263:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 264:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 265:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 266:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER13_1;
 267:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 268:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 20


 269:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 270:Src/main.c    ****   GPIOB->MODER |= GPIO_MODER_MODER14_0;
 271:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 272:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 273:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 274:Src/main.c    ****   GPIOC->MODER |= GPIO_MODER_MODER0_0;
 275:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 276:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 277:Src/main.c    **** 
 278:Src/main.c    ****   //Enable I2C2 in RCC
 279:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
 280:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 281:Src/main.c    ****   //PRESC 1
 282:Src/main.c    ****   //SCLL 0x13
 283:Src/main.c    ****   //SCLH 0xF
 284:Src/main.c    ****   //SDADEL 0x2
 285:Src/main.c    ****   //SCLDEL 0x4
 286:Src/main.c    ****   I2C2->TIMINGR |= 0x10420F13;
 287:Src/main.c    ****   //Enable I2C using PE bit in CR1
 288:Src/main.c    ****   I2C2->CR1 |= I2C_CR1_PE;
 289:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 290:Src/main.c    ****   I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));
 291:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 292:Src/main.c    ****   //Set number of bytes to transmit = 1
 293:Src/main.c    ****   //set RD_WRN bit to 0 to indicate write
 294:Src/main.c    ****   //set the START bit
 295:Src/main.c    ****   //I2C2->CR2 |= 0x00010069;
 296:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 297:Src/main.c    **** 
 298:Src/main.c    ****   //Wait until either TXIS or NACKF flags are set
 299:Src/main.c    ****   while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_TXIS)) {}
 300:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 301:Src/main.c    ****   {
 302:Src/main.c    ****     //Failed
 303:Src/main.c    ****     GPIOC->ODR |= GPIO_ODR_6; //Turn on red LED
 304:Src/main.c    ****   }
 305:Src/main.c    ****   else
 306:Src/main.c    ****   {
 307:Src/main.c    ****     //success
 308:Src/main.c    ****     GPIOC->ODR |= GPIO_ODR_9; //Turn on green LED
 309:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 310:Src/main.c    ****     I2C2->TXDR = 0x0F;
 311:Src/main.c    ****     //Wait until TC flag set
 312:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_TC)) {}
 313:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 314:Src/main.c    ****     I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));  
 315:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 316:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 317:Src/main.c    ****     //set start bit again to perform restart
 318:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_START;
 319:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 320:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_RXNE)) {}
 321:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 322:Src/main.c    ****     {
 323:Src/main.c    ****       //Failed
 324:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_8; //Turn on orange LED
 325:Src/main.c    ****     }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 21


 326:Src/main.c    ****     else
 327:Src/main.c    ****     {
 328:Src/main.c    ****       //wait until TC
 329:Src/main.c    ****       while (!(I2C2->ISR & I2C_ISR_TC)) {}
 330:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 331:Src/main.c    ****       if (I2C2->RXDR == 0xD3)
 332:Src/main.c    ****       {
 333:Src/main.c    ****         GPIOC->ODR |= GPIO_ODR_7; //Turn on blue LED
 334:Src/main.c    ****       }
 335:Src/main.c    ****       //Set STOP bit in CR2 to release I2C bus
 336:Src/main.c    ****       I2C2->CR2 |= I2C_CR2_STOP;
 337:Src/main.c    ****     }
 338:Src/main.c    ****   }
 339:Src/main.c    **** 
 340:Src/main.c    ****   //Wait 1 second and turn off LEDs
 341:Src/main.c    ****   HAL_Delay(1000);
 342:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_6;
 343:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_7;
 344:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_8;
 345:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_9;
 346:Src/main.c    **** 
 347:Src/main.c    ****   //Writing to gyro
 348:Src/main.c    ****   I2C2->CR2 &= ~((0x7F << 16) | (0x3FF << 0));
 349:Src/main.c    ****   I2C2->CR2 |= ((2 << 16) | (0x69 << 1));
 350:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 351:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 352:Src/main.c    ****   
 353:Src/main.c    ****   //Wait until either TXIS or NACKF flags are set
 354:Src/main.c    ****   while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_TXIS)) {}
 355:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 356:Src/main.c    ****   {
 357:Src/main.c    ****     //Success
 358:Src/main.c    ****     //Writing to control register 1
 359:Src/main.c    ****     I2C2->TXDR = 0x20;
 360:Src/main.c    ****     //Wait until TC flag set
 361:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_NACKF) && !(I2C2->ISR & I2C_ISR_TXIS)) {}
 362:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 363:Src/main.c    ****     I2C2->TXDR = 0x0B;
 364:Src/main.c    ****     //Wait until TC flag set
 365:Src/main.c    ****     while (!(I2C2->ISR & I2C_ISR_TC)) {}
 366:Src/main.c    ****     //Set STOP bit to release I2C bus
 367:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_STOP;
 368:Src/main.c    ****   }
 369:Src/main.c    ****   else
 370:Src/main.c    ****     GPIOC->ODR |= GPIO_ODR_6; //Turn on red LED
 371:Src/main.c    ****   
 372:Src/main.c    ****   int16_t gyro_x, gyro_y;
 373:Src/main.c    **** 
 374:Src/main.c    ****   while (1)
 375:Src/main.c    ****   {
 376:Src/main.c    ****     HAL_Delay(100);
 377:Src/main.c    ****     //Read X value
 378:Src/main.c    ****     gyro_x = read_axis('x');
 379:Src/main.c    ****     HAL_Delay(1);
 380:Src/main.c    ****     //Read Y value
 381:Src/main.c    ****     gyro_y = read_axis('y');
 382:Src/main.c    **** 
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 22


 383:Src/main.c    ****     transmit_val(gyro_y);
 384:Src/main.c    **** 
 385:Src/main.c    ****     if (gyro_x > 2000)
 386:Src/main.c    ****     {
 387:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_9;     
 388:Src/main.c    ****     }
 389:Src/main.c    ****     else if (gyro_x < -2000)
 390:Src/main.c    ****     {
 391:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_8;
 392:Src/main.c    ****     }
 393:Src/main.c    ****     else
 394:Src/main.c    ****     {
 395:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_8;
 396:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_9;
 397:Src/main.c    ****     }
 398:Src/main.c    **** 
 399:Src/main.c    ****     if (gyro_y > 2000)
 400:Src/main.c    ****     {
 401:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_6;     
 402:Src/main.c    ****     }
 403:Src/main.c    ****     else if (gyro_y < -2000)
 404:Src/main.c    ****     {
 405:Src/main.c    ****       GPIOC->ODR |= GPIO_ODR_7;
 406:Src/main.c    ****     }
 407:Src/main.c    ****     else
 408:Src/main.c    ****     {
 409:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_6;
 410:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_7;
 411:Src/main.c    ****     } 
 412:Src/main.c    ****   }
 413:Src/main.c    **** 
 414:Src/main.c    **** }
 415:Src/main.c    **** 
 416:Src/main.c    **** /** System Clock Configuration
 417:Src/main.c    **** */
 418:Src/main.c    **** void SystemClock_Config(void)
 419:Src/main.c    **** {
 420:Src/main.c    **** 
 421:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 422:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 423:Src/main.c    **** 
 424:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 425:Src/main.c    ****     */
 426:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 427:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 428:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 429:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 430:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 431:Src/main.c    ****   {
 432:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 433:Src/main.c    ****   }
 434:Src/main.c    **** 
 435:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 436:Src/main.c    ****     */
 437:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 438:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 439:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 23


 440:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 441:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 442:Src/main.c    **** 
 443:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 444:Src/main.c    ****   {
 445:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 446:Src/main.c    ****   }
 447:Src/main.c    **** 
 448:Src/main.c    ****     /**Configure the Systick interrupt time
 449:Src/main.c    ****     */
 450:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 451:Src/main.c    **** 
 452:Src/main.c    ****     /**Configure the Systick
 453:Src/main.c    ****     */
 454:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 455:Src/main.c    **** 
 456:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 457:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 458:Src/main.c    **** }
 459:Src/main.c    **** 
 460:Src/main.c    **** /* USER CODE BEGIN 4 */
 461:Src/main.c    **** 
 462:Src/main.c    **** /* USER CODE END 4 */
 463:Src/main.c    **** 
 464:Src/main.c    **** /**
 465:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 466:Src/main.c    ****   * @param  None
 467:Src/main.c    ****   * @retval None
 468:Src/main.c    ****   */
 469:Src/main.c    **** void _Error_Handler(char * file, int line)
 470:Src/main.c    **** {
 812              		.loc 1 470 1 is_stmt 1 view -0
 813              		.cfi_startproc
 814              		@ Volatile: function does not return.
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 818              	.LVL35:
 819              	.L47:
 471:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 472:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 473:Src/main.c    ****   while(1)
 820              		.loc 1 473 3 view .LVU257
 474:Src/main.c    ****   {
 475:Src/main.c    ****   }
 821              		.loc 1 475 3 view .LVU258
 473:Src/main.c    ****   {
 822              		.loc 1 473 8 view .LVU259
 823 0000 FEE7     		b	.L47
 824              		.cfi_endproc
 825              	.LFE47:
 827              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 828              		.align	2
 829              	.LC0:
 830 0000 5372632F 		.ascii	"Src/main.c\000"
 830      6D61696E 
 830      2E6300
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 24


 831              		.global	__aeabi_uidiv
 832              		.section	.text.SystemClock_Config,"ax",%progbits
 833              		.align	1
 834              		.global	SystemClock_Config
 835              		.syntax unified
 836              		.code	16
 837              		.thumb_func
 839              	SystemClock_Config:
 840              	.LFB46:
 419:Src/main.c    **** 
 841              		.loc 1 419 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 72
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 00B5     		push	{lr}
 846              	.LCFI3:
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 14, -4
 849 0002 93B0     		sub	sp, sp, #76
 850              	.LCFI4:
 851              		.cfi_def_cfa_offset 80
 421:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 852              		.loc 1 421 3 view .LVU261
 422:Src/main.c    **** 
 853              		.loc 1 422 3 view .LVU262
 426:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 854              		.loc 1 426 3 view .LVU263
 426:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 855              		.loc 1 426 36 is_stmt 0 view .LVU264
 856 0004 0223     		movs	r3, #2
 857 0006 0593     		str	r3, [sp, #20]
 427:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 858              		.loc 1 427 3 is_stmt 1 view .LVU265
 427:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 859              		.loc 1 427 30 is_stmt 0 view .LVU266
 860 0008 013B     		subs	r3, r3, #1
 861 000a 0893     		str	r3, [sp, #32]
 428:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 862              		.loc 1 428 3 is_stmt 1 view .LVU267
 428:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 863              		.loc 1 428 41 is_stmt 0 view .LVU268
 864 000c 0F33     		adds	r3, r3, #15
 865 000e 0993     		str	r3, [sp, #36]
 429:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 866              		.loc 1 429 3 is_stmt 1 view .LVU269
 429:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 867              		.loc 1 429 34 is_stmt 0 view .LVU270
 868 0010 0023     		movs	r3, #0
 869 0012 0E93     		str	r3, [sp, #56]
 430:Src/main.c    ****   {
 870              		.loc 1 430 3 is_stmt 1 view .LVU271
 430:Src/main.c    ****   {
 871              		.loc 1 430 7 is_stmt 0 view .LVU272
 872 0014 05A8     		add	r0, sp, #20
 873 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 874              	.LVL36:
 430:Src/main.c    ****   {
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 25


 875              		.loc 1 430 6 discriminator 1 view .LVU273
 876 001a 0028     		cmp	r0, #0
 877 001c 1ED1     		bne	.L51
 437:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 878              		.loc 1 437 3 is_stmt 1 view .LVU274
 437:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 879              		.loc 1 437 31 is_stmt 0 view .LVU275
 880 001e 0723     		movs	r3, #7
 881 0020 0193     		str	r3, [sp, #4]
 439:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 882              		.loc 1 439 3 is_stmt 1 view .LVU276
 439:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 883              		.loc 1 439 34 is_stmt 0 view .LVU277
 884 0022 0023     		movs	r3, #0
 885 0024 0293     		str	r3, [sp, #8]
 440:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 886              		.loc 1 440 3 is_stmt 1 view .LVU278
 440:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 887              		.loc 1 440 35 is_stmt 0 view .LVU279
 888 0026 0393     		str	r3, [sp, #12]
 441:Src/main.c    **** 
 889              		.loc 1 441 3 is_stmt 1 view .LVU280
 441:Src/main.c    **** 
 890              		.loc 1 441 36 is_stmt 0 view .LVU281
 891 0028 0493     		str	r3, [sp, #16]
 443:Src/main.c    ****   {
 892              		.loc 1 443 3 is_stmt 1 view .LVU282
 443:Src/main.c    ****   {
 893              		.loc 1 443 7 is_stmt 0 view .LVU283
 894 002a 0021     		movs	r1, #0
 895 002c 01A8     		add	r0, sp, #4
 896 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 897              	.LVL37:
 443:Src/main.c    ****   {
 898              		.loc 1 443 6 discriminator 1 view .LVU284
 899 0032 0028     		cmp	r0, #0
 900 0034 17D1     		bne	.L52
 450:Src/main.c    **** 
 901              		.loc 1 450 3 is_stmt 1 view .LVU285
 450:Src/main.c    **** 
 902              		.loc 1 450 22 is_stmt 0 view .LVU286
 903 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 904              	.LVL38:
 450:Src/main.c    **** 
 905              		.loc 1 450 3 discriminator 1 view .LVU287
 906 003a FA21     		movs	r1, #250
 907 003c 8900     		lsls	r1, r1, #2
 908 003e FFF7FEFF 		bl	__aeabi_uidiv
 909              	.LVL39:
 910 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 911              	.LVL40:
 454:Src/main.c    **** 
 912              		.loc 1 454 3 is_stmt 1 view .LVU288
 913 0046 0420     		movs	r0, #4
 914 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 915              	.LVL41:
 457:Src/main.c    **** }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 26


 916              		.loc 1 457 3 view .LVU289
 917 004c 0120     		movs	r0, #1
 918 004e 0022     		movs	r2, #0
 919 0050 0021     		movs	r1, #0
 920 0052 4042     		rsbs	r0, r0, #0
 921 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 922              	.LVL42:
 458:Src/main.c    **** 
 923              		.loc 1 458 1 is_stmt 0 view .LVU290
 924 0058 13B0     		add	sp, sp, #76
 925              		@ sp needed
 926 005a 00BD     		pop	{pc}
 927              	.L51:
 432:Src/main.c    ****   }
 928              		.loc 1 432 5 is_stmt 1 view .LVU291
 929 005c D821     		movs	r1, #216
 930 005e 0448     		ldr	r0, .L53
 931 0060 4900     		lsls	r1, r1, #1
 932 0062 FFF7FEFF 		bl	_Error_Handler
 933              	.LVL43:
 934              	.L52:
 445:Src/main.c    ****   }
 935              		.loc 1 445 5 view .LVU292
 936 0066 BE21     		movs	r1, #190
 937 0068 0148     		ldr	r0, .L53
 938 006a FF31     		adds	r1, r1, #255
 939 006c FFF7FEFF 		bl	_Error_Handler
 940              	.LVL44:
 941              	.L54:
 942              		.align	2
 943              	.L53:
 944 0070 00000000 		.word	.LC0
 945              		.cfi_endproc
 946              	.LFE46:
 948              		.section	.text.main,"ax",%progbits
 949              		.align	1
 950              		.global	main
 951              		.syntax unified
 952              		.code	16
 953              		.thumb_func
 955              	main:
 956              	.LFB45:
 251:Src/main.c    ****   SystemClock_Config();
 957              		.loc 1 251 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961 0000 70B5     		push	{r4, r5, r6, lr}
 962              	.LCFI5:
 963              		.cfi_def_cfa_offset 16
 964              		.cfi_offset 4, -16
 965              		.cfi_offset 5, -12
 966              		.cfi_offset 6, -8
 967              		.cfi_offset 14, -4
 252:Src/main.c    **** 
 968              		.loc 1 252 3 view .LVU294
 969 0002 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 27


 970              	.LVL45:
 255:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 971              		.loc 1 255 3 view .LVU295
 255:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 972              		.loc 1 255 6 is_stmt 0 view .LVU296
 973 0006 AA4C     		ldr	r4, .L93
 974 0008 6269     		ldr	r2, [r4, #20]
 255:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 975              		.loc 1 255 15 view .LVU297
 976 000a 8023     		movs	r3, #128
 977 000c DB02     		lsls	r3, r3, #11
 978 000e 1343     		orrs	r3, r2
 979 0010 6361     		str	r3, [r4, #20]
 256:Src/main.c    **** 
 980              		.loc 1 256 3 is_stmt 1 view .LVU298
 256:Src/main.c    **** 
 981              		.loc 1 256 6 is_stmt 0 view .LVU299
 982 0012 6269     		ldr	r2, [r4, #20]
 256:Src/main.c    **** 
 983              		.loc 1 256 15 view .LVU300
 984 0014 8023     		movs	r3, #128
 985 0016 1B03     		lsls	r3, r3, #12
 986 0018 1343     		orrs	r3, r2
 987 001a 6361     		str	r3, [r4, #20]
 258:Src/main.c    ****   init_uart();
 988              		.loc 1 258 3 is_stmt 1 view .LVU301
 989 001c FFF7FEFF 		bl	init_leds
 990              	.LVL46:
 259:Src/main.c    **** 
 991              		.loc 1 259 3 view .LVU302
 992 0020 FFF7FEFF 		bl	init_uart
 993              	.LVL47:
 262:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 994              		.loc 1 262 3 view .LVU303
 262:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 995              		.loc 1 262 8 is_stmt 0 view .LVU304
 996 0024 A34B     		ldr	r3, .L93+4
 997 0026 1968     		ldr	r1, [r3]
 262:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_11;
 998              		.loc 1 262 16 view .LVU305
 999 0028 8022     		movs	r2, #128
 1000 002a 1204     		lsls	r2, r2, #16
 1001 002c 0A43     		orrs	r2, r1
 1002 002e 1A60     		str	r2, [r3]
 263:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 1003              		.loc 1 263 3 is_stmt 1 view .LVU306
 263:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 1004              		.loc 1 263 8 is_stmt 0 view .LVU307
 1005 0030 5968     		ldr	r1, [r3, #4]
 263:Src/main.c    ****   GPIOB->AFR[1] |= 0x00001000;
 1006              		.loc 1 263 17 view .LVU308
 1007 0032 8022     		movs	r2, #128
 1008 0034 1201     		lsls	r2, r2, #4
 1009 0036 0A43     		orrs	r2, r1
 1010 0038 5A60     		str	r2, [r3, #4]
 264:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 1011              		.loc 1 264 3 is_stmt 1 view .LVU309
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 28


 264:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 1012              		.loc 1 264 13 is_stmt 0 view .LVU310
 1013 003a 596A     		ldr	r1, [r3, #36]
 264:Src/main.c    ****   //Set PB13 to alternate function, open-drain output, I2C2_SCL
 1014              		.loc 1 264 17 view .LVU311
 1015 003c 8022     		movs	r2, #128
 1016 003e 5201     		lsls	r2, r2, #5
 1017 0040 0A43     		orrs	r2, r1
 1018 0042 5A62     		str	r2, [r3, #36]
 266:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 1019              		.loc 1 266 3 is_stmt 1 view .LVU312
 266:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 1020              		.loc 1 266 8 is_stmt 0 view .LVU313
 1021 0044 1968     		ldr	r1, [r3]
 266:Src/main.c    ****   GPIOB->OTYPER |= GPIO_OTYPER_OT_13;
 1022              		.loc 1 266 16 view .LVU314
 1023 0046 8022     		movs	r2, #128
 1024 0048 1205     		lsls	r2, r2, #20
 1025 004a 0A43     		orrs	r2, r1
 1026 004c 1A60     		str	r2, [r3]
 267:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 1027              		.loc 1 267 3 is_stmt 1 view .LVU315
 267:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 1028              		.loc 1 267 8 is_stmt 0 view .LVU316
 1029 004e 5968     		ldr	r1, [r3, #4]
 267:Src/main.c    ****   GPIOB->AFR[1] |= 0x00500000;
 1030              		.loc 1 267 17 view .LVU317
 1031 0050 8022     		movs	r2, #128
 1032 0052 9201     		lsls	r2, r2, #6
 1033 0054 1143     		orrs	r1, r2
 1034 0056 5960     		str	r1, [r3, #4]
 268:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 1035              		.loc 1 268 3 is_stmt 1 view .LVU318
 268:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 1036              		.loc 1 268 13 is_stmt 0 view .LVU319
 1037 0058 586A     		ldr	r0, [r3, #36]
 268:Src/main.c    ****   //Set PB14 to output mode, push-pull output, set pin high
 1038              		.loc 1 268 17 view .LVU320
 1039 005a A021     		movs	r1, #160
 1040 005c C903     		lsls	r1, r1, #15
 1041 005e 0143     		orrs	r1, r0
 1042 0060 5962     		str	r1, [r3, #36]
 270:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 1043              		.loc 1 270 3 is_stmt 1 view .LVU321
 270:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 1044              		.loc 1 270 8 is_stmt 0 view .LVU322
 1045 0062 1868     		ldr	r0, [r3]
 270:Src/main.c    ****   GPIOB->OTYPER &= ~GPIO_OTYPER_OT_14;
 1046              		.loc 1 270 16 view .LVU323
 1047 0064 8021     		movs	r1, #128
 1048 0066 4905     		lsls	r1, r1, #21
 1049 0068 0143     		orrs	r1, r0
 1050 006a 1960     		str	r1, [r3]
 271:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 1051              		.loc 1 271 3 is_stmt 1 view .LVU324
 271:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 1052              		.loc 1 271 8 is_stmt 0 view .LVU325
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 29


 1053 006c 5968     		ldr	r1, [r3, #4]
 271:Src/main.c    ****   GPIOB->ODR |= GPIO_ODR_14;
 1054              		.loc 1 271 17 view .LVU326
 1055 006e 9248     		ldr	r0, .L93+8
 1056 0070 0140     		ands	r1, r0
 1057 0072 5960     		str	r1, [r3, #4]
 272:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 1058              		.loc 1 272 3 is_stmt 1 view .LVU327
 272:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 1059              		.loc 1 272 8 is_stmt 0 view .LVU328
 1060 0074 5869     		ldr	r0, [r3, #20]
 272:Src/main.c    ****   //Set PC0 to output mode, push-pull output, set pin high
 1061              		.loc 1 272 14 view .LVU329
 1062 0076 8021     		movs	r1, #128
 1063 0078 C901     		lsls	r1, r1, #7
 1064 007a 0143     		orrs	r1, r0
 1065 007c 5961     		str	r1, [r3, #20]
 274:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 1066              		.loc 1 274 3 is_stmt 1 view .LVU330
 274:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 1067              		.loc 1 274 8 is_stmt 0 view .LVU331
 1068 007e 8F4B     		ldr	r3, .L93+12
 1069 0080 1868     		ldr	r0, [r3]
 274:Src/main.c    ****   GPIOC->OTYPER &= ~GPIO_OTYPER_OT_0;
 1070              		.loc 1 274 16 view .LVU332
 1071 0082 0121     		movs	r1, #1
 1072 0084 0843     		orrs	r0, r1
 1073 0086 1860     		str	r0, [r3]
 275:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 1074              		.loc 1 275 3 is_stmt 1 view .LVU333
 275:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 1075              		.loc 1 275 8 is_stmt 0 view .LVU334
 1076 0088 5868     		ldr	r0, [r3, #4]
 275:Src/main.c    ****   GPIOC->ODR |= GPIO_ODR_0;
 1077              		.loc 1 275 17 view .LVU335
 1078 008a 8843     		bics	r0, r1
 1079 008c 5860     		str	r0, [r3, #4]
 276:Src/main.c    **** 
 1080              		.loc 1 276 3 is_stmt 1 view .LVU336
 276:Src/main.c    **** 
 1081              		.loc 1 276 8 is_stmt 0 view .LVU337
 1082 008e 5869     		ldr	r0, [r3, #20]
 276:Src/main.c    **** 
 1083              		.loc 1 276 14 view .LVU338
 1084 0090 0843     		orrs	r0, r1
 1085 0092 5861     		str	r0, [r3, #20]
 279:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 1086              		.loc 1 279 3 is_stmt 1 view .LVU339
 279:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 1087              		.loc 1 279 6 is_stmt 0 view .LVU340
 1088 0094 E069     		ldr	r0, [r4, #28]
 279:Src/main.c    ****   //Set TIMINGR to 100 kHz standard-mode - section 5.5.2 and fig 5.4
 1089              		.loc 1 279 16 view .LVU341
 1090 0096 8023     		movs	r3, #128
 1091 0098 DB03     		lsls	r3, r3, #15
 1092 009a 0343     		orrs	r3, r0
 1093 009c E361     		str	r3, [r4, #28]
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 30


 286:Src/main.c    ****   //Enable I2C using PE bit in CR1
 1094              		.loc 1 286 3 is_stmt 1 view .LVU342
 286:Src/main.c    ****   //Enable I2C using PE bit in CR1
 1095              		.loc 1 286 7 is_stmt 0 view .LVU343
 1096 009e 884B     		ldr	r3, .L93+16
 1097 00a0 1C69     		ldr	r4, [r3, #16]
 286:Src/main.c    ****   //Enable I2C using PE bit in CR1
 1098              		.loc 1 286 17 view .LVU344
 1099 00a2 8848     		ldr	r0, .L93+20
 1100 00a4 2043     		orrs	r0, r4
 1101 00a6 1861     		str	r0, [r3, #16]
 288:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 1102              		.loc 1 288 3 is_stmt 1 view .LVU345
 288:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 1103              		.loc 1 288 7 is_stmt 0 view .LVU346
 1104 00a8 1868     		ldr	r0, [r3]
 288:Src/main.c    ****   //Set L3GD20 slave address = 0x69
 1105              		.loc 1 288 13 view .LVU347
 1106 00aa 0143     		orrs	r1, r0
 1107 00ac 1960     		str	r1, [r3]
 290:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1108              		.loc 1 290 3 is_stmt 1 view .LVU348
 290:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1109              		.loc 1 290 7 is_stmt 0 view .LVU349
 1110 00ae 5968     		ldr	r1, [r3, #4]
 290:Src/main.c    ****   I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1111              		.loc 1 290 13 view .LVU350
 1112 00b0 8548     		ldr	r0, .L93+24
 1113 00b2 0140     		ands	r1, r0
 1114 00b4 5960     		str	r1, [r3, #4]
 291:Src/main.c    ****   //Set number of bytes to transmit = 1
 1115              		.loc 1 291 3 is_stmt 1 view .LVU351
 291:Src/main.c    ****   //Set number of bytes to transmit = 1
 1116              		.loc 1 291 7 is_stmt 0 view .LVU352
 1117 00b6 5868     		ldr	r0, [r3, #4]
 291:Src/main.c    ****   //Set number of bytes to transmit = 1
 1118              		.loc 1 291 13 view .LVU353
 1119 00b8 8449     		ldr	r1, .L93+28
 1120 00ba 0143     		orrs	r1, r0
 1121 00bc 5960     		str	r1, [r3, #4]
 296:Src/main.c    **** 
 1122              		.loc 1 296 3 is_stmt 1 view .LVU354
 296:Src/main.c    **** 
 1123              		.loc 1 296 7 is_stmt 0 view .LVU355
 1124 00be 5968     		ldr	r1, [r3, #4]
 296:Src/main.c    **** 
 1125              		.loc 1 296 13 view .LVU356
 1126 00c0 0A43     		orrs	r2, r1
 1127 00c2 5A60     		str	r2, [r3, #4]
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1128              		.loc 1 299 3 is_stmt 1 view .LVU357
 1129              	.L57:
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1130              		.loc 1 299 72 discriminator 2 view .LVU358
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1131              		.loc 1 299 39 discriminator 2 view .LVU359
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 31


 1132              		.loc 1 299 16 is_stmt 0 discriminator 2 view .LVU360
 1133 00c4 7E4B     		ldr	r3, .L93+16
 1134 00c6 9B69     		ldr	r3, [r3, #24]
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1135              		.loc 1 299 39 discriminator 2 view .LVU361
 1136 00c8 DB06     		lsls	r3, r3, #27
 1137 00ca 03D4     		bmi	.L56
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1138              		.loc 1 299 48 discriminator 1 view .LVU362
 1139 00cc 7C4B     		ldr	r3, .L93+16
 1140 00ce 9B69     		ldr	r3, [r3, #24]
 299:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 1141              		.loc 1 299 39 discriminator 1 view .LVU363
 1142 00d0 9B07     		lsls	r3, r3, #30
 1143 00d2 F7D5     		bpl	.L57
 1144              	.L56:
 300:Src/main.c    ****   {
 1145              		.loc 1 300 3 is_stmt 1 view .LVU364
 300:Src/main.c    ****   {
 1146              		.loc 1 300 11 is_stmt 0 view .LVU365
 1147 00d4 7A4B     		ldr	r3, .L93+16
 1148 00d6 9B69     		ldr	r3, [r3, #24]
 300:Src/main.c    ****   {
 1149              		.loc 1 300 6 view .LVU366
 1150 00d8 DB06     		lsls	r3, r3, #27
 1151 00da 50D5     		bpl	.L58
 303:Src/main.c    ****   }
 1152              		.loc 1 303 5 is_stmt 1 view .LVU367
 303:Src/main.c    ****   }
 1153              		.loc 1 303 10 is_stmt 0 view .LVU368
 1154 00dc 774A     		ldr	r2, .L93+12
 1155 00de 5169     		ldr	r1, [r2, #20]
 303:Src/main.c    ****   }
 1156              		.loc 1 303 16 view .LVU369
 1157 00e0 4023     		movs	r3, #64
 1158 00e2 0B43     		orrs	r3, r1
 1159 00e4 5361     		str	r3, [r2, #20]
 1160              	.L59:
 341:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_6;
 1161              		.loc 1 341 3 is_stmt 1 view .LVU370
 1162 00e6 FA20     		movs	r0, #250
 1163 00e8 8000     		lsls	r0, r0, #2
 1164 00ea FFF7FEFF 		bl	HAL_Delay
 1165              	.LVL48:
 342:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_7;
 1166              		.loc 1 342 3 view .LVU371
 342:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_7;
 1167              		.loc 1 342 8 is_stmt 0 view .LVU372
 1168 00ee 734B     		ldr	r3, .L93+12
 1169 00f0 5A69     		ldr	r2, [r3, #20]
 342:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_7;
 1170              		.loc 1 342 14 view .LVU373
 1171 00f2 4021     		movs	r1, #64
 1172 00f4 8A43     		bics	r2, r1
 1173 00f6 5A61     		str	r2, [r3, #20]
 343:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_8;
 1174              		.loc 1 343 3 is_stmt 1 view .LVU374
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 32


 343:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_8;
 1175              		.loc 1 343 8 is_stmt 0 view .LVU375
 1176 00f8 5A69     		ldr	r2, [r3, #20]
 343:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_8;
 1177              		.loc 1 343 14 view .LVU376
 1178 00fa 4031     		adds	r1, r1, #64
 1179 00fc 8A43     		bics	r2, r1
 1180 00fe 5A61     		str	r2, [r3, #20]
 344:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_9;
 1181              		.loc 1 344 3 is_stmt 1 view .LVU377
 344:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_9;
 1182              		.loc 1 344 8 is_stmt 0 view .LVU378
 1183 0100 5A69     		ldr	r2, [r3, #20]
 344:Src/main.c    ****   GPIOC->ODR &= ~GPIO_ODR_9;
 1184              		.loc 1 344 14 view .LVU379
 1185 0102 7349     		ldr	r1, .L93+32
 1186 0104 0A40     		ands	r2, r1
 1187 0106 5A61     		str	r2, [r3, #20]
 345:Src/main.c    **** 
 1188              		.loc 1 345 3 is_stmt 1 view .LVU380
 345:Src/main.c    **** 
 1189              		.loc 1 345 8 is_stmt 0 view .LVU381
 1190 0108 5A69     		ldr	r2, [r3, #20]
 345:Src/main.c    **** 
 1191              		.loc 1 345 14 view .LVU382
 1192 010a 7249     		ldr	r1, .L93+36
 1193 010c 0A40     		ands	r2, r1
 1194 010e 5A61     		str	r2, [r3, #20]
 348:Src/main.c    ****   I2C2->CR2 |= ((2 << 16) | (0x69 << 1));
 1195              		.loc 1 348 3 is_stmt 1 view .LVU383
 348:Src/main.c    ****   I2C2->CR2 |= ((2 << 16) | (0x69 << 1));
 1196              		.loc 1 348 7 is_stmt 0 view .LVU384
 1197 0110 6B4B     		ldr	r3, .L93+16
 1198 0112 5A68     		ldr	r2, [r3, #4]
 348:Src/main.c    ****   I2C2->CR2 |= ((2 << 16) | (0x69 << 1));
 1199              		.loc 1 348 13 view .LVU385
 1200 0114 6C49     		ldr	r1, .L93+24
 1201 0116 0A40     		ands	r2, r1
 1202 0118 5A60     		str	r2, [r3, #4]
 349:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 1203              		.loc 1 349 3 is_stmt 1 view .LVU386
 349:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 1204              		.loc 1 349 7 is_stmt 0 view .LVU387
 1205 011a 5968     		ldr	r1, [r3, #4]
 349:Src/main.c    ****   I2C2->CR2 &= ~I2C_CR2_RD_WRN;
 1206              		.loc 1 349 13 view .LVU388
 1207 011c 6E4A     		ldr	r2, .L93+40
 1208 011e 0A43     		orrs	r2, r1
 1209 0120 5A60     		str	r2, [r3, #4]
 350:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 1210              		.loc 1 350 3 is_stmt 1 view .LVU389
 350:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 1211              		.loc 1 350 7 is_stmt 0 view .LVU390
 1212 0122 5A68     		ldr	r2, [r3, #4]
 350:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 1213              		.loc 1 350 13 view .LVU391
 1214 0124 6D49     		ldr	r1, .L93+44
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 33


 1215 0126 0A40     		ands	r2, r1
 1216 0128 5A60     		str	r2, [r3, #4]
 351:Src/main.c    ****   
 1217              		.loc 1 351 3 is_stmt 1 view .LVU392
 351:Src/main.c    ****   
 1218              		.loc 1 351 7 is_stmt 0 view .LVU393
 1219 012a 5968     		ldr	r1, [r3, #4]
 351:Src/main.c    ****   
 1220              		.loc 1 351 13 view .LVU394
 1221 012c 8022     		movs	r2, #128
 1222 012e 9201     		lsls	r2, r2, #6
 1223 0130 0A43     		orrs	r2, r1
 1224 0132 5A60     		str	r2, [r3, #4]
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1225              		.loc 1 354 3 is_stmt 1 view .LVU395
 1226              	.L66:
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1227              		.loc 1 354 72 discriminator 2 view .LVU396
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1228              		.loc 1 354 39 discriminator 2 view .LVU397
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1229              		.loc 1 354 16 is_stmt 0 discriminator 2 view .LVU398
 1230 0134 624B     		ldr	r3, .L93+16
 1231 0136 9B69     		ldr	r3, [r3, #24]
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1232              		.loc 1 354 39 discriminator 2 view .LVU399
 1233 0138 DB06     		lsls	r3, r3, #27
 1234 013a 03D4     		bmi	.L65
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1235              		.loc 1 354 48 discriminator 1 view .LVU400
 1236 013c 604B     		ldr	r3, .L93+16
 1237 013e 9B69     		ldr	r3, [r3, #24]
 354:Src/main.c    ****   if (!(I2C2->ISR & I2C_ISR_NACKF))
 1238              		.loc 1 354 39 discriminator 1 view .LVU401
 1239 0140 9B07     		lsls	r3, r3, #30
 1240 0142 F7D5     		bpl	.L66
 1241              	.L65:
 355:Src/main.c    ****   {
 1242              		.loc 1 355 3 is_stmt 1 view .LVU402
 355:Src/main.c    ****   {
 1243              		.loc 1 355 13 is_stmt 0 view .LVU403
 1244 0144 5E4B     		ldr	r3, .L93+16
 1245 0146 9B69     		ldr	r3, [r3, #24]
 355:Src/main.c    ****   {
 1246              		.loc 1 355 6 view .LVU404
 1247 0148 DB06     		lsls	r3, r3, #27
 1248 014a 60D4     		bmi	.L67
 359:Src/main.c    ****     //Wait until TC flag set
 1249              		.loc 1 359 5 is_stmt 1 view .LVU405
 359:Src/main.c    ****     //Wait until TC flag set
 1250              		.loc 1 359 16 is_stmt 0 view .LVU406
 1251 014c 5C4B     		ldr	r3, .L93+16
 1252 014e 2022     		movs	r2, #32
 1253 0150 9A62     		str	r2, [r3, #40]
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1254              		.loc 1 361 5 is_stmt 1 view .LVU407
 1255              	.L69:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 34


 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1256              		.loc 1 361 74 discriminator 2 view .LVU408
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1257              		.loc 1 361 41 discriminator 2 view .LVU409
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1258              		.loc 1 361 18 is_stmt 0 discriminator 2 view .LVU410
 1259 0152 5B4B     		ldr	r3, .L93+16
 1260 0154 9B69     		ldr	r3, [r3, #24]
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1261              		.loc 1 361 41 discriminator 2 view .LVU411
 1262 0156 DB06     		lsls	r3, r3, #27
 1263 0158 03D4     		bmi	.L68
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1264              		.loc 1 361 50 discriminator 1 view .LVU412
 1265 015a 594B     		ldr	r3, .L93+16
 1266 015c 9B69     		ldr	r3, [r3, #24]
 361:Src/main.c    ****     //Enable X and Y gyro axes and set sensor into normal mode
 1267              		.loc 1 361 41 discriminator 1 view .LVU413
 1268 015e 9B07     		lsls	r3, r3, #30
 1269 0160 F7D5     		bpl	.L69
 1270              	.L68:
 363:Src/main.c    ****     //Wait until TC flag set
 1271              		.loc 1 363 5 is_stmt 1 view .LVU414
 363:Src/main.c    ****     //Wait until TC flag set
 1272              		.loc 1 363 16 is_stmt 0 view .LVU415
 1273 0162 574B     		ldr	r3, .L93+16
 1274 0164 0B22     		movs	r2, #11
 1275 0166 9A62     		str	r2, [r3, #40]
 365:Src/main.c    ****     //Set STOP bit to release I2C bus
 1276              		.loc 1 365 5 is_stmt 1 view .LVU416
 1277              	.L70:
 365:Src/main.c    ****     //Set STOP bit to release I2C bus
 1278              		.loc 1 365 40 discriminator 1 view .LVU417
 365:Src/main.c    ****     //Set STOP bit to release I2C bus
 1279              		.loc 1 365 12 discriminator 1 view .LVU418
 365:Src/main.c    ****     //Set STOP bit to release I2C bus
 1280              		.loc 1 365 18 is_stmt 0 discriminator 1 view .LVU419
 1281 0168 554B     		ldr	r3, .L93+16
 1282 016a 9B69     		ldr	r3, [r3, #24]
 365:Src/main.c    ****     //Set STOP bit to release I2C bus
 1283              		.loc 1 365 12 discriminator 1 view .LVU420
 1284 016c 5B06     		lsls	r3, r3, #25
 1285 016e FBD5     		bpl	.L70
 367:Src/main.c    ****   }
 1286              		.loc 1 367 5 is_stmt 1 view .LVU421
 367:Src/main.c    ****   }
 1287              		.loc 1 367 9 is_stmt 0 view .LVU422
 1288 0170 534A     		ldr	r2, .L93+16
 1289 0172 5168     		ldr	r1, [r2, #4]
 367:Src/main.c    ****   }
 1290              		.loc 1 367 15 view .LVU423
 1291 0174 8023     		movs	r3, #128
 1292 0176 DB01     		lsls	r3, r3, #7
 1293 0178 0B43     		orrs	r3, r1
 1294 017a 5360     		str	r3, [r2, #4]
 1295 017c 66E0     		b	.L71
 1296              	.L58:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 35


 308:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 1297              		.loc 1 308 5 is_stmt 1 view .LVU424
 308:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 1298              		.loc 1 308 10 is_stmt 0 view .LVU425
 1299 017e 4F4A     		ldr	r2, .L93+12
 1300 0180 5169     		ldr	r1, [r2, #20]
 308:Src/main.c    ****     //Write addres of WHO_AM_I register into I2C TXDR
 1301              		.loc 1 308 16 view .LVU426
 1302 0182 8023     		movs	r3, #128
 1303 0184 9B00     		lsls	r3, r3, #2
 1304 0186 0B43     		orrs	r3, r1
 1305 0188 5361     		str	r3, [r2, #20]
 310:Src/main.c    ****     //Wait until TC flag set
 1306              		.loc 1 310 5 is_stmt 1 view .LVU427
 310:Src/main.c    ****     //Wait until TC flag set
 1307              		.loc 1 310 16 is_stmt 0 view .LVU428
 1308 018a 4D4B     		ldr	r3, .L93+16
 1309 018c 0F22     		movs	r2, #15
 1310 018e 9A62     		str	r2, [r3, #40]
 312:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 1311              		.loc 1 312 5 is_stmt 1 view .LVU429
 1312              	.L60:
 312:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 1313              		.loc 1 312 40 discriminator 1 view .LVU430
 312:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 1314              		.loc 1 312 12 discriminator 1 view .LVU431
 312:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 1315              		.loc 1 312 18 is_stmt 0 discriminator 1 view .LVU432
 1316 0190 4B4B     		ldr	r3, .L93+16
 1317 0192 9B69     		ldr	r3, [r3, #24]
 312:Src/main.c    ****     //Reload CR2 with same parameters but set RD_WRN bit to 1 to read 
 1318              		.loc 1 312 12 discriminator 1 view .LVU433
 1319 0194 5B06     		lsls	r3, r3, #25
 1320 0196 FBD5     		bpl	.L60
 314:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1321              		.loc 1 314 5 is_stmt 1 view .LVU434
 314:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1322              		.loc 1 314 9 is_stmt 0 view .LVU435
 1323 0198 494B     		ldr	r3, .L93+16
 1324 019a 5A68     		ldr	r2, [r3, #4]
 314:Src/main.c    ****     I2C2->CR2 |= ((1 << 16) | (0x69 << 1));
 1325              		.loc 1 314 15 view .LVU436
 1326 019c 4A49     		ldr	r1, .L93+24
 1327 019e 0A40     		ands	r2, r1
 1328 01a0 5A60     		str	r2, [r3, #4]
 315:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 1329              		.loc 1 315 5 is_stmt 1 view .LVU437
 315:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 1330              		.loc 1 315 9 is_stmt 0 view .LVU438
 1331 01a2 5968     		ldr	r1, [r3, #4]
 315:Src/main.c    ****     I2C2->CR2 |= I2C_CR2_RD_WRN;
 1332              		.loc 1 315 15 view .LVU439
 1333 01a4 494A     		ldr	r2, .L93+28
 1334 01a6 0A43     		orrs	r2, r1
 1335 01a8 5A60     		str	r2, [r3, #4]
 316:Src/main.c    ****     //set start bit again to perform restart
 1336              		.loc 1 316 5 is_stmt 1 view .LVU440
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 36


 316:Src/main.c    ****     //set start bit again to perform restart
 1337              		.loc 1 316 9 is_stmt 0 view .LVU441
 1338 01aa 5968     		ldr	r1, [r3, #4]
 316:Src/main.c    ****     //set start bit again to perform restart
 1339              		.loc 1 316 15 view .LVU442
 1340 01ac 8022     		movs	r2, #128
 1341 01ae D200     		lsls	r2, r2, #3
 1342 01b0 0A43     		orrs	r2, r1
 1343 01b2 5A60     		str	r2, [r3, #4]
 318:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 1344              		.loc 1 318 5 is_stmt 1 view .LVU443
 318:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 1345              		.loc 1 318 9 is_stmt 0 view .LVU444
 1346 01b4 5968     		ldr	r1, [r3, #4]
 318:Src/main.c    ****     //wait until either RXNE or NACKF flags set
 1347              		.loc 1 318 15 view .LVU445
 1348 01b6 8022     		movs	r2, #128
 1349 01b8 9201     		lsls	r2, r2, #6
 1350 01ba 0A43     		orrs	r2, r1
 1351 01bc 5A60     		str	r2, [r3, #4]
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1352              		.loc 1 320 5 is_stmt 1 view .LVU446
 1353              	.L62:
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1354              		.loc 1 320 74 discriminator 2 view .LVU447
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1355              		.loc 1 320 41 discriminator 2 view .LVU448
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1356              		.loc 1 320 18 is_stmt 0 discriminator 2 view .LVU449
 1357 01be 404B     		ldr	r3, .L93+16
 1358 01c0 9B69     		ldr	r3, [r3, #24]
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1359              		.loc 1 320 41 discriminator 2 view .LVU450
 1360 01c2 DB06     		lsls	r3, r3, #27
 1361 01c4 03D4     		bmi	.L61
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1362              		.loc 1 320 50 discriminator 1 view .LVU451
 1363 01c6 3E4B     		ldr	r3, .L93+16
 1364 01c8 9B69     		ldr	r3, [r3, #24]
 320:Src/main.c    ****     if (I2C2->ISR & I2C_ISR_NACKF)
 1365              		.loc 1 320 41 discriminator 1 view .LVU452
 1366 01ca 5B07     		lsls	r3, r3, #29
 1367 01cc F7D5     		bpl	.L62
 1368              	.L61:
 321:Src/main.c    ****     {
 1369              		.loc 1 321 5 is_stmt 1 view .LVU453
 321:Src/main.c    ****     {
 1370              		.loc 1 321 13 is_stmt 0 view .LVU454
 1371 01ce 3C4B     		ldr	r3, .L93+16
 1372 01d0 9B69     		ldr	r3, [r3, #24]
 321:Src/main.c    ****     {
 1373              		.loc 1 321 8 view .LVU455
 1374 01d2 DB06     		lsls	r3, r3, #27
 1375 01d4 06D5     		bpl	.L63
 324:Src/main.c    ****     }
 1376              		.loc 1 324 7 is_stmt 1 view .LVU456
 324:Src/main.c    ****     }
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 37


 1377              		.loc 1 324 12 is_stmt 0 view .LVU457
 1378 01d6 394A     		ldr	r2, .L93+12
 1379 01d8 5169     		ldr	r1, [r2, #20]
 324:Src/main.c    ****     }
 1380              		.loc 1 324 18 view .LVU458
 1381 01da 8023     		movs	r3, #128
 1382 01dc 5B00     		lsls	r3, r3, #1
 1383 01de 0B43     		orrs	r3, r1
 1384 01e0 5361     		str	r3, [r2, #20]
 1385 01e2 80E7     		b	.L59
 1386              	.L63:
 329:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 1387              		.loc 1 329 42 is_stmt 1 discriminator 1 view .LVU459
 329:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 1388              		.loc 1 329 14 discriminator 1 view .LVU460
 329:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 1389              		.loc 1 329 20 is_stmt 0 discriminator 1 view .LVU461
 1390 01e4 364B     		ldr	r3, .L93+16
 1391 01e6 9B69     		ldr	r3, [r3, #24]
 329:Src/main.c    ****       //Check RXDR register to see if it matches 0xD3
 1392              		.loc 1 329 14 discriminator 1 view .LVU462
 1393 01e8 5B06     		lsls	r3, r3, #25
 1394 01ea FBD5     		bpl	.L63
 331:Src/main.c    ****       {
 1395              		.loc 1 331 7 is_stmt 1 view .LVU463
 331:Src/main.c    ****       {
 1396              		.loc 1 331 15 is_stmt 0 view .LVU464
 1397 01ec 344B     		ldr	r3, .L93+16
 1398 01ee 5B6A     		ldr	r3, [r3, #36]
 331:Src/main.c    ****       {
 1399              		.loc 1 331 10 view .LVU465
 1400 01f0 D32B     		cmp	r3, #211
 1401 01f2 06D0     		beq	.L91
 1402              	.L64:
 336:Src/main.c    ****     }
 1403              		.loc 1 336 7 is_stmt 1 view .LVU466
 336:Src/main.c    ****     }
 1404              		.loc 1 336 11 is_stmt 0 view .LVU467
 1405 01f4 324A     		ldr	r2, .L93+16
 1406 01f6 5168     		ldr	r1, [r2, #4]
 336:Src/main.c    ****     }
 1407              		.loc 1 336 17 view .LVU468
 1408 01f8 8023     		movs	r3, #128
 1409 01fa DB01     		lsls	r3, r3, #7
 1410 01fc 0B43     		orrs	r3, r1
 1411 01fe 5360     		str	r3, [r2, #4]
 1412 0200 71E7     		b	.L59
 1413              	.L91:
 333:Src/main.c    ****       }
 1414              		.loc 1 333 9 is_stmt 1 view .LVU469
 333:Src/main.c    ****       }
 1415              		.loc 1 333 14 is_stmt 0 view .LVU470
 1416 0202 2E4A     		ldr	r2, .L93+12
 1417 0204 5169     		ldr	r1, [r2, #20]
 333:Src/main.c    ****       }
 1418              		.loc 1 333 20 view .LVU471
 1419 0206 533B     		subs	r3, r3, #83
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 38


 1420 0208 0B43     		orrs	r3, r1
 1421 020a 5361     		str	r3, [r2, #20]
 1422 020c F2E7     		b	.L64
 1423              	.L67:
 370:Src/main.c    ****   
 1424              		.loc 1 370 5 is_stmt 1 view .LVU472
 370:Src/main.c    ****   
 1425              		.loc 1 370 10 is_stmt 0 view .LVU473
 1426 020e 2B4A     		ldr	r2, .L93+12
 1427 0210 5169     		ldr	r1, [r2, #20]
 370:Src/main.c    ****   
 1428              		.loc 1 370 16 view .LVU474
 1429 0212 4023     		movs	r3, #64
 1430 0214 0B43     		orrs	r3, r1
 1431 0216 5361     		str	r3, [r2, #20]
 1432 0218 18E0     		b	.L71
 1433              	.LVL49:
 1434              	.L73:
 389:Src/main.c    ****     {
 1435              		.loc 1 389 10 is_stmt 1 view .LVU475
 389:Src/main.c    ****     {
 1436              		.loc 1 389 13 is_stmt 0 view .LVU476
 1437 021a 314B     		ldr	r3, .L93+48
 1438 021c 9C42     		cmp	r4, r3
 1439 021e 06DA     		bge	.L75
 391:Src/main.c    ****     }
 1440              		.loc 1 391 7 is_stmt 1 view .LVU477
 391:Src/main.c    ****     }
 1441              		.loc 1 391 12 is_stmt 0 view .LVU478
 1442 0220 264A     		ldr	r2, .L93+12
 1443 0222 5169     		ldr	r1, [r2, #20]
 391:Src/main.c    ****     }
 1444              		.loc 1 391 18 view .LVU479
 1445 0224 8023     		movs	r3, #128
 1446 0226 5B00     		lsls	r3, r3, #1
 1447 0228 0B43     		orrs	r3, r1
 1448 022a 5361     		str	r3, [r2, #20]
 1449 022c 28E0     		b	.L74
 1450              	.L75:
 395:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_9;
 1451              		.loc 1 395 7 is_stmt 1 view .LVU480
 395:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_9;
 1452              		.loc 1 395 12 is_stmt 0 view .LVU481
 1453 022e 234B     		ldr	r3, .L93+12
 1454 0230 5A69     		ldr	r2, [r3, #20]
 395:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_9;
 1455              		.loc 1 395 18 view .LVU482
 1456 0232 2749     		ldr	r1, .L93+32
 1457 0234 0A40     		ands	r2, r1
 1458 0236 5A61     		str	r2, [r3, #20]
 396:Src/main.c    ****     }
 1459              		.loc 1 396 7 is_stmt 1 view .LVU483
 396:Src/main.c    ****     }
 1460              		.loc 1 396 12 is_stmt 0 view .LVU484
 1461 0238 5A69     		ldr	r2, [r3, #20]
 396:Src/main.c    ****     }
 1462              		.loc 1 396 18 view .LVU485
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 39


 1463 023a 2649     		ldr	r1, .L93+36
 1464 023c 0A40     		ands	r2, r1
 1465 023e 5A61     		str	r2, [r3, #20]
 1466 0240 1EE0     		b	.L74
 1467              	.L92:
 401:Src/main.c    ****     }
 1468              		.loc 1 401 7 is_stmt 1 view .LVU486
 401:Src/main.c    ****     }
 1469              		.loc 1 401 12 is_stmt 0 view .LVU487
 1470 0242 1E4A     		ldr	r2, .L93+12
 1471 0244 5369     		ldr	r3, [r2, #20]
 401:Src/main.c    ****     }
 1472              		.loc 1 401 18 view .LVU488
 1473 0246 4021     		movs	r1, #64
 1474 0248 0B43     		orrs	r3, r1
 1475 024a 5361     		str	r3, [r2, #20]
 1476              	.LVL50:
 1477              	.L71:
 372:Src/main.c    **** 
 1478              		.loc 1 372 3 is_stmt 1 view .LVU489
 374:Src/main.c    ****   {
 1479              		.loc 1 374 3 view .LVU490
 376:Src/main.c    ****     //Read X value
 1480              		.loc 1 376 5 view .LVU491
 1481 024c 6420     		movs	r0, #100
 1482 024e FFF7FEFF 		bl	HAL_Delay
 1483              	.LVL51:
 378:Src/main.c    ****     HAL_Delay(1);
 1484              		.loc 1 378 5 view .LVU492
 378:Src/main.c    ****     HAL_Delay(1);
 1485              		.loc 1 378 14 is_stmt 0 view .LVU493
 1486 0252 7820     		movs	r0, #120
 1487 0254 FFF7FEFF 		bl	read_axis
 1488              	.LVL52:
 1489 0258 0400     		movs	r4, r0
 1490              	.LVL53:
 379:Src/main.c    ****     //Read Y value
 1491              		.loc 1 379 5 is_stmt 1 view .LVU494
 1492 025a 0120     		movs	r0, #1
 1493              	.LVL54:
 379:Src/main.c    ****     //Read Y value
 1494              		.loc 1 379 5 is_stmt 0 view .LVU495
 1495 025c FFF7FEFF 		bl	HAL_Delay
 1496              	.LVL55:
 381:Src/main.c    **** 
 1497              		.loc 1 381 5 is_stmt 1 view .LVU496
 381:Src/main.c    **** 
 1498              		.loc 1 381 14 is_stmt 0 view .LVU497
 1499 0260 7920     		movs	r0, #121
 1500 0262 FFF7FEFF 		bl	read_axis
 1501              	.LVL56:
 1502 0266 0500     		movs	r5, r0
 1503              	.LVL57:
 383:Src/main.c    **** 
 1504              		.loc 1 383 5 is_stmt 1 view .LVU498
 1505 0268 FFF7FEFF 		bl	transmit_val
 1506              	.LVL58:
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 40


 385:Src/main.c    ****     {
 1507              		.loc 1 385 5 view .LVU499
 385:Src/main.c    ****     {
 1508              		.loc 1 385 8 is_stmt 0 view .LVU500
 1509 026c FA23     		movs	r3, #250
 1510 026e DB00     		lsls	r3, r3, #3
 1511 0270 9C42     		cmp	r4, r3
 1512 0272 D2DD     		ble	.L73
 387:Src/main.c    ****     }
 1513              		.loc 1 387 7 is_stmt 1 view .LVU501
 387:Src/main.c    ****     }
 1514              		.loc 1 387 12 is_stmt 0 view .LVU502
 1515 0274 114A     		ldr	r2, .L93+12
 1516 0276 5169     		ldr	r1, [r2, #20]
 387:Src/main.c    ****     }
 1517              		.loc 1 387 18 view .LVU503
 1518 0278 8023     		movs	r3, #128
 1519 027a 9B00     		lsls	r3, r3, #2
 1520 027c 0B43     		orrs	r3, r1
 1521 027e 5361     		str	r3, [r2, #20]
 1522              	.L74:
 399:Src/main.c    ****     {
 1523              		.loc 1 399 5 is_stmt 1 view .LVU504
 399:Src/main.c    ****     {
 1524              		.loc 1 399 8 is_stmt 0 view .LVU505
 1525 0280 FA23     		movs	r3, #250
 1526 0282 DB00     		lsls	r3, r3, #3
 1527 0284 9D42     		cmp	r5, r3
 1528 0286 DCDC     		bgt	.L92
 403:Src/main.c    ****     {
 1529              		.loc 1 403 10 is_stmt 1 view .LVU506
 403:Src/main.c    ****     {
 1530              		.loc 1 403 13 is_stmt 0 view .LVU507
 1531 0288 154B     		ldr	r3, .L93+48
 1532 028a 9D42     		cmp	r5, r3
 1533 028c 05DA     		bge	.L78
 405:Src/main.c    ****     }
 1534              		.loc 1 405 7 is_stmt 1 view .LVU508
 405:Src/main.c    ****     }
 1535              		.loc 1 405 12 is_stmt 0 view .LVU509
 1536 028e 0B4A     		ldr	r2, .L93+12
 1537 0290 5369     		ldr	r3, [r2, #20]
 405:Src/main.c    ****     }
 1538              		.loc 1 405 18 view .LVU510
 1539 0292 8021     		movs	r1, #128
 1540 0294 0B43     		orrs	r3, r1
 1541 0296 5361     		str	r3, [r2, #20]
 1542 0298 D8E7     		b	.L71
 1543              	.L78:
 409:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_7;
 1544              		.loc 1 409 7 is_stmt 1 view .LVU511
 409:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_7;
 1545              		.loc 1 409 12 is_stmt 0 view .LVU512
 1546 029a 084B     		ldr	r3, .L93+12
 1547 029c 5A69     		ldr	r2, [r3, #20]
 409:Src/main.c    ****       GPIOC->ODR &= ~GPIO_ODR_7;
 1548              		.loc 1 409 18 view .LVU513
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 41


 1549 029e 4021     		movs	r1, #64
 1550 02a0 8A43     		bics	r2, r1
 1551 02a2 5A61     		str	r2, [r3, #20]
 410:Src/main.c    ****     } 
 1552              		.loc 1 410 7 is_stmt 1 view .LVU514
 410:Src/main.c    ****     } 
 1553              		.loc 1 410 12 is_stmt 0 view .LVU515
 1554 02a4 5A69     		ldr	r2, [r3, #20]
 410:Src/main.c    ****     } 
 1555              		.loc 1 410 18 view .LVU516
 1556 02a6 4031     		adds	r1, r1, #64
 1557 02a8 8A43     		bics	r2, r1
 1558 02aa 5A61     		str	r2, [r3, #20]
 1559 02ac CEE7     		b	.L71
 1560              	.L94:
 1561 02ae C046     		.align	2
 1562              	.L93:
 1563 02b0 00100240 		.word	1073876992
 1564 02b4 00040048 		.word	1207960576
 1565 02b8 FFBFFFFF 		.word	-16385
 1566 02bc 00080048 		.word	1207961600
 1567 02c0 00580040 		.word	1073764352
 1568 02c4 130F4210 		.word	272764691
 1569 02c8 00FC80FF 		.word	-8324096
 1570 02cc D2000100 		.word	65746
 1571 02d0 FFFEFFFF 		.word	-257
 1572 02d4 FFFDFFFF 		.word	-513
 1573 02d8 D2000200 		.word	131282
 1574 02dc FFFBFFFF 		.word	-1025
 1575 02e0 30F8FFFF 		.word	-2000
 1576              		.cfi_endproc
 1577              	.LFE45:
 1579              		.text
 1580              	.Letext0:
 1581              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1582              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1583              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1584              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1585              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1586              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 1587              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:19     .text.init_leds:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:25     .text.init_leds:00000000 init_leds
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:187    .text.init_leds:000000b4 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:202    .text.init_uart:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:208    .text.init_uart:00000000 init_uart
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:358    .text.init_uart:000000a4 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:370    .text.transmit_char:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:376    .text.transmit_char:00000000 transmit_char
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:403    .text.transmit_char:00000010 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:410    .text.transmit_val:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:416    .text.transmit_val:00000000 transmit_val
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:532    .text.read_axis:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:538    .text.read_axis:00000000 read_axis
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:795    .text.read_axis:000000e8 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:804    .text._Error_Handler:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:810    .text._Error_Handler:00000000 _Error_Handler
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:828    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:833    .text.SystemClock_Config:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:839    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:944    .text.SystemClock_Config:00000070 $d
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:949    .text.main:00000000 $t
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:955    .text.main:00000000 main
/var/folders/kr/g9ry2bg56g773797gdtkvvkw0000gn/T//ccsOdINt.s:1563   .text.main:000002b0 $d

UNDEFINED SYMBOLS
__aeabi_idivmod
__aeabi_idiv
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Delay
